/**
 * Unpublished Work. Copyright 2009-2018 Transverse, LLC. All Rights Reserved.
 * This software contains confidential and trade secret information of:
 * Transverse, LLC.
 * 620 Congress Ave.
 * Suite 200
 * Austin, TX 78701
 * USA
 * Use, duplication or disclosure of this software is prohibited
 * without prior written permission of Transverse, LLC.
 */

/**
 * This class is use to provide API response when calling from test.
 * @author AMAN JAIN
 */

public with sharing class RestApiTestUtil {
  /**
   * @description: This method is used to get Dummy billing Account for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper querybillingAccount() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[{ "id": "1496278", "account_num": "test_013", "externalAccountNum": null, "billtype": "EMAIL", "billCycle": { "bill_cycle_type": "monthly", "id": "9110", "status": "ACTIVE", "name": "BC test_01-1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1208", "name": "ACtest_01" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "946562" }, "day_of_month": 1 }, "responsibleParty": { "party_type": "organization", "id": "1503154", "addresses": [ { "addressType": "email", "id": "3130974", "purpose": "PRIMARY", "email": "testmail@gmail.com" }, { "addressType": "postal", "id": "3130972", "purpose": "BILLING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "postal", "id": "3130970", "purpose": "SERVICE", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "postal", "id": "3130968", "purpose": "SHIPPING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" } ], "organizationName": "Test Account Salesforce", "tax_id_validated": false }, "recurring_payments": [], "billingaccountcategory": { "id": "1208", "status": "ACTIVE", "name": "ACtest_01", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, "auto_payment_authorized": false, "status": "FINAL_BILL", "pending_charges_total": 0, "balance": 540, "start_date": "2019-05-13T05:31:51-05:00", "end_date": "2019-05-20T01:44:38-05:00", "custom_field_values": [ { "custom_field_value_type": "billing-account", "id": "171884", "value": "456", "custom_field": { "custom_field_type": "billing-account", "id": "2226", "name": "account custom list cf" } } ], "contacts": [ { "party_type": "person", "id": "1503238", "addresses": [ { "addressType": "postal", "id": "3131288", "purpose": "BILLING", "country": "USA", "city": "City", "line1": "ADD line1", "region_or_state": "NE", "postal_code": "11111" }, { "addressType": "email", "id": "3131290", "purpose": "PRIMARY", "email": "test@gmail.com" } ], "first_name": "FName" }, { "party_type": "person", "id": "1503284", "suffix": "Test", "company": "Test Company", "department": "Test Department", "title": "Test Title", "addresses": [ { "addressType": "postal", "id": "3131406", "purpose": "BILLING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "email", "id": "3131408", "purpose": "SECONDARY", "email": "Testmail2@gmail.com" }, { "addressType": "email", "id": "3131410", "purpose": "PRIMARY", "email": "Testmail@gmail.com" }, { "addressType": "telecom", "id": "3131412", "purpose": "MOBILE", "number": "464654465645", "extension": "4556", "country_code": "97", "area_code": "25" }, { "addressType": "telecom", "id": "3131414", "purpose": "FAX", "number": "132165465465", "extension": "56", "country_code": "95", "area_code": "23" }, { "addressType": "telecom", "id": "3131416", "purpose": "HOME", "number": "56444646466", "extension": "45", "country_code": "92", "area_code": "89" }, { "addressType": "telecom", "id": "3131418", "purpose": "OFFICE", "number": "74521464445", "extension": "45", "country_code": "91", "area_code": "21" } ], "first_name": "Test", "last_name": "By Aman", "middle_name": "Contact", "contact_category": { "id": "156", "name": "ContactC1" } } ], "payment_term": { "id": "1062", "name": "Net 30" }, "tax_exempt": true, "currencyCode": "USD", "next_invoice_date": "2017-03-01T00:00:00-06:00", "responsible_account": { "id": "1496278", "account_num": "test_013", "externalAccountNum": null }, "background_allocation": true, "preferred_language_code": "EN", "minimum_invoice_amount": null }]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccount>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccount>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Payments for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPayments() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "payment_type": "payment", "id": "930860", "amount": 100, "status": "COMPLETED", "billing_account": { "id": "1417468", "account_num": "Dpref26", "external_account_num": null }, "payment_method": { "payment_method_type": "cash", "id": "836474", "custom_field_values": [], "multi_factor_auth": false }, "occurred_on": "2019-06-12T01:10:50-05:00", "use_recurring_payment": false, "unapplied_amount": 0, "currency_code": "USD", "payment_processor": { "id": "12916", "type": "CASH_CHECK" }, "refunds": [], "refunded_amount": 0, "canceled_amount": 0, "apply_automatically": true }, { "payment_type": "payment", "id": "930862", "amount": 1000, "status": "PROCESSING_ERROR", "billing_account": { "id": "1417468", "account_num": "Dpref26", "external_account_num": null }, "payment_method": { "payment_method_type": "custom", "id": "836476", "custom_field_values": [], "multi_factor_auth": false, "reference": "looooooooooo" }, "occurred_on": "2019-06-12T00:00:00-05:00", "use_recurring_payment": false, "unapplied_amount": 1000, "currency_code": "USD", "payment_processor": { "id": "13624", "type": "EXTERNAL" }, "refunds": [], "refunded_amount": 0, "canceled_amount": 0, "apply_automatically": true }, { "payment_type": "payment", "id": "930864", "amount": 1000, "status": "EXTERNAL_REVIEW", "billing_account": { "id": "1417468", "account_num": "Dpref26", "external_account_num": null }, "payment_method": { "payment_method_type": "custom", "id": "836478", "custom_field_values": [ { "custom_field_value_type": "payment-method", "id": "173672", "value": "tesdtyyu", "custom_field": { "custom_field_type": "payment-method", "id": "1928", "name": "MandateId" } } ], "multi_factor_auth": false, "reference": "looooooooooo" }, "occurred_on": "2019-06-12T00:00:00-05:00", "use_recurring_payment": false, "unapplied_amount": 1000, "currency_code": "USD", "payment_processor": { "id": "13624", "type": "EXTERNAL" }, "refunds": [], "refunded_amount": 0, "canceled_amount": 0, "apply_automatically": true } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIPayment>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIPayment>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Payment Applications for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPaymentApplications() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "payment_application_type": "standard-invoice", "id": "8011696", "payment": { "payment_type": "payment", "id": "930860" }, "amount": 100, "invoice": { "invoice_type": "standard", "id": "738430", "invoice_num": "Dpref46" }, "state": "COMPLETED", "updated_on": "2019-06-12T01:10:50-05:00", "applied_on": "2019-06-12T01:10:50-05:00" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIPaymentApplication>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIPaymentApplication>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Invoices for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryInvoices() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "invoice_type":"standard", "id":"738430", "amount":294, "status":"OPEN", "invoice_num":"Dpref46", "external_invoice_num":null, "billing_account":{ "id":"1417468", "account_num":"Dpref26", "external_account_num":null }, "occurred_on":"2017-05-01T00:00:00-05:00", "due_date":"2017-05-01", "amount_to_pay":61, "late_fee_charged":false, "bill_cycle":{ "bill_cycle_type":"monthly", "id":"7328", "name":"BC" }, "invoiceItems":[ { "invoice_item_type":"service", "id":"8245260", "quantity":1, "taxable":true, "service":{ "id":"2086618" }, "unit_amount":147, "total_amount":147, "prorated_percentage":100, "invoiceItemCharges":[ { "invoice_item_charge_type":"charge", "id":"9449532", "amount":140, "balance":0, "paid":true, "un_prorated_amount":140, "price_category":{ "charge_category_type":"price", "id":"3240", "name":"Price Taxable" }, "recurring_charge":true, "bill_in_advance":true, "description":"Price Taxable", "exclude_from_taxation":false, "quantity":1 }, { "invoice_item_charge_type":"tax", "id":"9449534", "amount":7, "balance":7, "paid":true, "price_category":{ "charge_category_type":"tax", "id":"3202", "name":"Tax" }, "description":"Social", "exclude_from_taxation":false, "quantity":1, "tax_category_id":0, "tax_description":"Some description", "tax_code":"12345", "tax_level":"Federal", "tax_rate":0.05, "jurisdiction_name":"Social", "tax_custom_01":"custon01", "tax_custom_02":"custon02", "tax_custom_03":"custon03" } ], "start_date":"2017-04-01T00:00:00-05:00", "end_date":"2017-05-01T00:00:00-05:00" }, { "invoice_item_type":"service", "id":"8245262", "quantity":1, "taxable":true, "service":{ "id":"2086618" }, "unit_amount":147, "total_amount":147, "prorated_percentage":100, "invoiceItemCharges":[ { "invoice_item_charge_type":"charge", "id":"9449536", "amount":140, "balance":61, "paid":false, "un_prorated_amount":140, "price_category":{ "charge_category_type":"price", "id":"3240", "name":"Price Taxable" }, "recurring_charge":true, "bill_in_advance":true, "description":"Price Taxable", "exclude_from_taxation":false, "quantity":1 }, { "invoice_item_charge_type":"tax", "id":"9449538", "amount":7, "balance":7, "paid":true, "price_category":{ "charge_category_type":"tax", "id":"3202", "name":"Tax" }, "description":"Social", "exclude_from_taxation":false, "quantity":1, "tax_category_id":0, "tax_description":"Some description", "tax_code":"12345", "tax_level":"Federal", "tax_rate":0.05, "jurisdiction_name":"Social", "tax_custom_01":"custon01", "tax_custom_02":"custon02", "tax_custom_03":"custon03" } ], "start_date":"2017-05-01T00:00:00-05:00", "end_date":"2017-06-01T00:00:00-05:00" } ], "billingStatement":{ "statement_type":"statement", "balance":-133, "id":"562534", "total_amount":161, "serviceCharges":280, "activity_charges":0, "other_charges_and_credits":0, "taxes_and_fees":14, "total_current_charges":294, "payment_received_amount":0, "payment_canceled_amount":0, "credit_adjustments_posted_amount":-133, "credit_adjustments_write_off_amount":0 }, "auto_payment_date":"2017-05-01", "disputed":false }, { "invoice_type":"standard", "id":"738440", "amount":147, "status":"OPEN", "invoice_num":"Dpref51", "external_invoice_num":null, "billing_account":{ "id":"1417468", "account_num":"Dpref26", "external_account_num":null }, "occurred_on":"2017-06-01T00:00:00-05:00", "due_date":"2017-06-01", "amount_to_pay":147, "late_fee_charged":false, "bill_cycle":{ "bill_cycle_type":"monthly", "id":"7328", "name":"BC" }, "invoiceItems":[ { "invoice_item_type":"service", "id":"8245272", "quantity":1, "taxable":true, "service":{ "id":"2086618" }, "unit_amount":147, "total_amount":147, "prorated_percentage":100, "invoiceItemCharges":[ { "invoice_item_charge_type":"charge", "id":"9449548", "amount":140, "balance":140, "paid":false, "un_prorated_amount":140, "price_category":{ "charge_category_type":"price", "id":"3240", "name":"Price Taxable" }, "recurring_charge":true, "bill_in_advance":true, "description":"Price Taxable", "exclude_from_taxation":false, "quantity":1 }, { "invoice_item_charge_type":"tax", "id":"9449550", "amount":7, "balance":7, "paid":false, "price_category":{ "charge_category_type":"tax", "id":"3202", "name":"Tax" }, "description":"Social", "exclude_from_taxation":false, "quantity":1, "tax_category_id":0, "tax_description":"Some description", "tax_code":"12345", "tax_level":"Federal", "tax_rate":0.05, "jurisdiction_name":"Social", "tax_custom_01":"custon01", "tax_custom_02":"custon02", "tax_custom_03":"custon03" } ], "start_date":"2017-06-01T00:00:00-05:00", "end_date":"2017-07-01T00:00:00-05:00" } ], "billingStatement":{ "statement_type":"statement", "balance":161, "id":"562544", "total_amount":308, "serviceCharges":140, "activity_charges":0, "other_charges_and_credits":0, "taxes_and_fees":7, "total_current_charges":147, "payment_received_amount":0, "payment_canceled_amount":0, "credit_adjustments_posted_amount":0, "credit_adjustments_write_off_amount":0 }, "auto_payment_date":"2017-06-01", "disputed":false }, { "invoice_type":"standard", "id":"738528", "amount":147, "status":"OPEN", "invoice_num":"Dpref65", "external_invoice_num":null, "billing_account":{ "id":"1417468", "account_num":"Dpref26", "external_account_num":null }, "occurred_on":"2017-07-01T00:00:00-05:00", "due_date":"2017-07-01", "amount_to_pay":147, "late_fee_charged":false, "bill_cycle":{ "bill_cycle_type":"monthly", "id":"7328", "name":"BC" }, "invoiceItems":[ { "invoice_item_type":"service", "id":"8245474", "quantity":1, "taxable":true, "service":{ "id":"2086618" }, "unit_amount":147, "total_amount":147, "prorated_percentage":100, "invoiceItemCharges":[ { "invoice_item_charge_type":"charge", "id":"9449804", "amount":140, "balance":140, "paid":false, "un_prorated_amount":140, "price_category":{ "charge_category_type":"price", "id":"3240", "name":"Price Taxable" }, "recurring_charge":true, "bill_in_advance":true, "description":"Price Taxable", "exclude_from_taxation":false, "quantity":1 }, { "invoice_item_charge_type":"tax", "id":"9449806", "amount":7, "balance":7, "paid":false, "price_category":{ "charge_category_type":"tax", "id":"3202", "name":"Tax" }, "description":"Social", "exclude_from_taxation":false, "quantity":1, "tax_category_id":0, "tax_description":"Some description", "tax_code":"12345", "tax_level":"Federal", "tax_rate":0.05, "jurisdiction_name":"Social", "tax_custom_01":"custon01", "tax_custom_02":"custon02", "tax_custom_03":"custon03" } ], "start_date":"2017-07-01T00:00:00-05:00", "end_date":"2017-08-01T00:00:00-05:00" } ], "billingStatement":{ "statement_type":"statement", "balance":308, "id":"562632", "total_amount":455, "serviceCharges":140, "activity_charges":0, "other_charges_and_credits":0, "taxes_and_fees":7, "total_current_charges":147, "payment_received_amount":0, "payment_canceled_amount":0, "credit_adjustments_posted_amount":0, "credit_adjustments_write_off_amount":0 }, "auto_payment_date":"2017-07-01", "disputed":false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIInvoice>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIInvoice>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Debit Adjustments for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryDebitAdjustments() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "90660", "amount": 1000, "description": "test", "invoiced": false, "status": "PENDING", "reason": { "id": "1296", "name": "Default Debit Adjustment Reason" }, "credit": false, "occurred_on": "2019-06-12T01:43:13-05:00", "adjustmentType": "MANUAL", "billing_account": { "id": "1417468", "account_num": "Dpref26", "external_account_num": null }, "unapplied_amount": 0, "items": [ { "adjustment_item_type": "manual", "id": "91054", "amount": 1000, "description": "test", "reason": { "id": "1296", "name": "Default Debit Adjustment Reason" }, "category": { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category" } } ] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDebitAccountAdjustment>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDebitAccountAdjustment>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Credit Adjustments for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryCreditAdjustments() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "41832", "amount": 133, "description": "test", "invoiced": true, "status": "POSTED", "reason": { "id": "1294", "name": "Default Credit Adjustment Reason" }, "credit": true, "occurred_on": "2017-04-01T00:00:00-05:00", "adjustmentType": "MANUAL", "billing_account": { "id": "1417468", "account_num": "Dpref26", "external_account_num": null }, "posted_on": "2017-08-16T09:05:56-05:00", "posted_by": "multientity_new", "unapplied_amount": 0, "items": [ { "adjustment_item_type": "service", "id": "42206", "amount": 133, "description": "test", "reason": { "id": "1294", "name": "Default Credit Adjustment Reason" }, "category": { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category" }, "service": { "id": "2086618" } } ], "credit_number": "Dpref14", "manual_invoice_application": false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPICreditAccountAdjustment>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPICreditAccountAdjustment>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Persons for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPersons() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "party_type": "person", "id": "1504712", "suffix": "eee", "company": "efffffff", "department": "ggggggggg", "title": "ggggggggg", "addresses": [ { "addressType": "postal", "id": "3135478", "purpose": "BILLING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "email", "id": "3135480", "purpose": "PRIMARY", "email": "testmail@gmail.com" }, { "addressType": "telecom", "id": "3135482", "purpose": "OFFICE", "number": "7894561235", "extension": "144", "country_code": "777", "area_code": "14" } ], "first_name": "Test", "last_name": "rrtt", "middle_name": "tes", "contact_category": { "id": "156", "name": "ContactC1" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIPerson>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIPerson>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Payment Methods for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPaymentMethods() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "67164", "paymentMethod": { "paymentMethodType": "custom", "id": "836510", "custom_field_values": [], "multi_factor_auth": false, "reference": "DWWFFFFFFFFF" }, "billing_account": { "id": "1417380", "account_num": "Dpref18", "external_account_num": null }, "validFrom": "2019-06-12T04:14:52-05:00", "auto_payment": false }, { "id": "67168", "paymentMethod": { "paymentMethodType": "mobile-carrier", "id": "836522", "nickname": "testtt", "msisdn": "1455666", "custom_field_values": [], "multi_factor_auth": false, "emailAddress": { "addressType": "email", "id": "3135462", "purpose": "PAYMENT", "email": "testmail@gmail.com" }, "postal_address": { "addressType": "postal", "id": "3135460", "purpose": "PAYMENT", "country": "USA", "city": "Austin", "line1": "Test Street", "regionOrState": "TX", "postalCode": "78701" }, "telecomAddress": { "addressType": "telecom", "id": "3135464", "purpose": "PAYMENT", "number": "77777894555", "extension": "78", "countryCode": "1222", "areaCode": "78" }, "carrier_name": "rt444444ttt" }, "billing_account": { "id": "1417380", "account_num": "Dpref18", "external_account_num": null }, "validFrom": "2019-06-12T04:31:21-05:00", "auto_payment": false } ,{ "id": "67018", "paymentMethod": { "paymentMethodType": "tokenized-credit-card", "id": "835602", "nickname": "Credit Card Ending 1111", "token": "100020484", "custom_field_values": [], "multi_factor_auth": false, "postalAddress": { "addressType": "postal", "id": "3132496", "purpose": "PAYMENT", "country": "USA", "city": "Austin", "line1": "Sector 63", "regionOrState": "TX", "postal_code": "78301" }, "cardType": "AMEX", "firstName": "ABC XYZ", "lastName": "ASDFFGH", "identifierNumber": "First 6: 411111 Last 4: 1111", "expirationDate": "06/2025", "last_four": "1111", "token_two": "frnbjz","telecomAddress": { "addressType": "telecom", "id": "3135464", "purpose": "PAYMENT", "number": "77777894555", "extension": "78", "countryCode": "1222", "areaCode": "78" },"emailAddress": { "addressType": "email", "id": "3135462", "purpose": "PAYMENT", "email": "testmail@gmail.com" } },"billing_account": { "id": "1496224", "account_num": "M64", "external_account_num": null }, "validFrom": "2019-05-21T08:03:24-05:00", "auto_payment": false },{ "id":"67018", "paymentMethod":{ "paymentMethodType":"pay-pal", "id":"835602", "nickname":"Credit Card Ending 1111", "token":"100020484", "custom_field_values":[ ], "multi_factor_auth":false, "postalAddress":{ "addressType":"postal", "id":"3132496", "purpose":"PAYMENT", "country":"USA", "city":"Austin", "line1":"Sector 63", "regionOrState":"TX", "postal_code":"78301" }, "telecomAddress":{ "addressType":"telecom", "id":"3135464", "purpose":"PAYMENT", "number":"77777894555", "extension":"78", "countryCode":"1222", "areaCode":"78" }, "emailAddress":{ "addressType":"email", "id":"3135462", "purpose":"PAYMENT", "email":"testmail@gmail.com" } }, "billing_account":{ "id":"1496224", "account_num":"M64", "external_account_num":null }, "validFrom":"2019-05-21T08:03:24-05:00", "auto_payment":false },{ "id":"67018", "paymentMethod":{ "paymentMethodType":"bank", "id":"835602", "nickname":"Credit Card Ending 1111", "token":"100020484", "custom_field_values":[ ], "multi_factor_auth":false, "postalAddress":{ "addressType":"postal", "id":"3132496", "purpose":"PAYMENT", "country":"USA", "city":"Austin", "line1":"Sector 63", "regionOrState":"TX", "postal_code":"78301" }, "telecomAddress":{ "addressType":"telecom", "id":"3135464", "purpose":"PAYMENT", "number":"77777894555", "extension":"78", "countryCode":"1222", "areaCode":"78" }, "emailAddress":{ "addressType":"email", "id":"3135462", "purpose":"PAYMENT", "email":"testmail@gmail.com" } }, "billing_account":{ "id":"1496224", "account_num":"M64", "external_account_num":null }, "validFrom":"2019-05-21T08:03:24-05:00", "auto_payment":false },{ "id":"67018", "paymentMethod":{ "paymentMethodType":"direct-debit", "id":"835602", "nickname":"Credit Card Ending 1111", "token":"100020484", "custom_field_values":[ ], "multi_factor_auth":false, "emailAddress":{ "addressType":"email", "id":"3135462", "purpose":"PAYMENT", "email":"testmail@gmail.com" } }, "billing_account":{ "id":"1496224", "account_num":"M64", "external_account_num":null }, "validFrom":"2019-05-21T08:03:24-05:00", "auto_payment":false },{ "id":"67018", "paymentMethod":{ "paymentMethodType":"bpay", "id":"835602", "nickname":"Credit Card Ending 1111", "token":"100020484", "custom_field_values":[ ], "multi_factor_auth":false, "emailAddress":{ "addressType":"email", "id":"3135462", "purpose":"PAYMENT", "email":"testmail@gmail.com" } }, "billing_account":{ "id":"1496224", "account_num":"M64", "external_account_num":null }, "validFrom":"2019-05-21T08:03:24-05:00", "auto_payment":false }]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIRecurringPayment>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIRecurringPayment>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy SalesOrders for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper querySalesOrders() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "order_type": "sales", "id": "2167778", "order_num": "223472530", "order_items": [ { "order_item_type": "product", "id": "2663126", "quantity": 1, "sequence": 1, "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "order_items": [], "status": "COMPLETED", "extended_price": 111, "awaiting_approval": false, "price_list": { "id": "696", "name": "Default Price List" }, "service_resources": [], "requested_effective_date": "2019-05-13T05:31:51-05:00", "operation_run_attributes": [], "custom_field_values": [], "addresses": [], "consume_prepaid_balance": false, "order_item_prices": [ { "order_item_price_type": "recurring", "id": "2677616", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "price_override": true, "amount": 111, "taxable_amount": 0, "product_price": { "product_price_type": "recurring", "id": "42618", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2017-01-01T00:00:00-06:00", "price_override": true, "price_ranges": [ { "price_range_type": "product", "id": "46468", "price": 111, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [] }, "price_ranges": [ { "price_range_type": "order-item", "id": "758708", "price": 111, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "price_group": null, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true } ], "service": { "id": "2186508" }, "order_item_counters": [], "charges": [ { "order_item_charge_type": "product-recurring", "id": "3925322", "amount": 111, "price_category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "overridden": false } ] } ], "billing_account": { "id": "1496278", "account_num": "test_013", "external_account_num": null }, "email_receipt": true, "order_date": "2019-05-13T05:31:51-05:00", "total_amount": 111, "custom_field_values": [], "status": "COMPLETED", "sub_total": 111, "tax_total": 0, "due_now_total": 0, "due_now_tax_total": 0 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIOrder>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIOrder>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Products for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProducts() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "product_type": "customer-subscription", "id": "2679616", "name": "Subproduct 5/15", "description": "1", "serialized": true, "taxable": false, "trial": false, "state": "AVAILABLE", "requiresAgreement": false, "default_quantity": 1, "prices": [ { "product_price_type": "recurring", "id": "18536", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2016-05-15T00:00:00-05:00", "price_override": true, "priceRanges": [ { "price_range_type": "product", "id": "20668", "price": 100, "level": 1, "quantity_begin_range": 0, "currencyCode": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "recurrence_amount": 120, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [] } ], "productCategory": { "id": "900", "name": "Default" }, "min_service_resources": 0, "max_service_resources": 0, "trial_override": false, "product_tags": [], "introduction_date": "2016-05-15T05:15:00-05:00", "custom_field_values": [], "rule_override": false, "rule_type": "TAPERED", "rule_mode": "ROOT", "consume_prepaid_balance": false }, { "product_type": "general", "id": "13028", "name": "SJTest", "description": "SJTest", "serialized": false, "taxable": false, "trial": false, "short_description": "SJTest", "state": "AVAILABLE", "requiresAgreement": false, "default_quantity": 1, "prices": [ { "product_price_type": "one-time", "id": "18798", "tapered": true, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2017-06-05T00:00:00-05:00", "price_override": true, "priceRanges": [ { "price_range_type": "product", "id": "20984", "price": 1, "level": 1, "quantity_begin_range": 0, "currencyCode": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "charge_during_renewal": false, "allow_scheduled_charges": false } ], "productCategory": { "id": "900", "name": "Default" }, "internal_name": "SJTest", "external_product_number": "SJTest", "trial_override": false, "product_tags": [], "introduction_date": "2017-06-05T11:43:00-05:00", "custom_field_values": [], "fund_prepaid_balance": false, "expiring_contribution": false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProduct>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProduct>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy UsageEvents for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryUsageEvents() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "1007830000", "description": "usage_5", "total_charge": 5, "start_time": "2019-05-23T00:17:00-05:00", "service_resource_identifier": "544562595+65", "usageUom": "MILLISECOND", "usage_amount": 1, "event_charges": [ { "id": "1011088297", "charge": 5, "usage_rule": { "id": "146015526" }, "charge_category": { "charge_category_type": "usage-charge", "id": "5938", "name": "0082" }, "usageUom": "MILLISECOND", "usage_amount": 1 } ], "service_period": { "id": "638223804" }, "overwrite_counter": 0 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIUsageEvent>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIUsageEvent>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Service Resource for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryServiceResource() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "resource_type": "service", "id": "50676", "description": null, "category": { "id": "1266", "name": "Default" }, "status": "ACTIVE", "identifier": "544562595+65" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIServiceResource>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIServiceResource>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy BillCycles for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryBillCycles() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "bill_cycle_type": "monthly", "id": "5458", "status": "ACTIVE", "name": "BC monthly 5/15/16", "start_date": "2019-05-15T00:00:00-05:00", "end_date": "2019-06-15T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "940", "name": "AC 5/15" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "740042" }, "day_of_month": 15 }, { "bill_cycle_type": "monthly", "id": "6454", "status": "SUSPENDED", "name": "BC_02 7/13", "start_date": "2019-06-13T00:00:00-05:00", "end_date": "2019-07-13T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1058", "name": "AC_02 7/13" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "806462" }, "day_of_month": 13 }, { "bill_cycle_type": "monthly", "id": "7210", "status": "ACTIVE", "name": "test", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "848574" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7224", "status": "ACTIVE", "name": "1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "848592" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7256", "status": "ACTIVE", "name": "BC test sss", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1108", "name": "AC without PT and APO" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "849646" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7300", "status": "SUSPENDED", "name": "BC_01 8/14", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1102", "name": "AC_test" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "851754" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7302", "status": "SUSPENDED", "name": "BC_02 8/14", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1112", "name": "AC no cat" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "851762" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7304", "status": "ACTIVE", "name": "1-1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "851778" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7328", "status": "ACTIVE", "name": "BC", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "852890" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7338", "status": "SUSPENDED", "name": "BC_01 8/15", "start_date": "2019-05-15T00:00:00-05:00", "end_date": "2019-06-15T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1118", "name": "Kos AC" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "852902" }, "day_of_month": 15 }, { "bill_cycle_type": "monthly", "id": "7340", "status": "SUSPENDED", "name": "BC_011 8/15", "start_date": "2019-05-15T00:00:00-05:00", "end_date": "2019-06-15T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1120", "name": "AC 8/15" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "853934" }, "day_of_month": 15 }, { "bill_cycle_type": "monthly", "id": "7344", "status": "ACTIVE", "name": "2", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "853966" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7366", "status": "ACTIVE", "name": "BC_8/16", "start_date": "2019-05-16T00:00:00-05:00", "end_date": "2019-06-16T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1128", "name": "AC 8/16" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "854082" }, "day_of_month": 16 }, { "bill_cycle_type": "monthly", "id": "7388", "status": "ACTIVE", "name": "Test01 Solomiia BC", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1132", "name": "Test01 Solomiia Account Category" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "855178" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7408", "status": "ACTIVE", "name": "COP-1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "COP", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "855274" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7414", "status": "SUSPENDED", "name": "BC_01 8/17", "start_date": "2019-05-17T00:00:00-05:00", "end_date": "2019-06-17T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1128", "name": "AC 8/16" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "855292" }, "day_of_month": 17 }, { "bill_cycle_type": "monthly", "id": "7466", "status": "ACTIVE", "name": "BC-1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "938", "name": "All Accounts" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "859504" }, "day_of_month": 1 }, { "bill_cycle_type": "monthly", "id": "7492", "status": "SUSPENDED", "name": "BC_01 8/21 Net 30", "start_date": "2019-05-21T00:00:00-05:00", "end_date": "2019-06-21T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1102", "name": "AC_test" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "859614" }, "day_of_month": 21 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillCycle>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillCycle>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product DiscountCode List for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getProductDiscountCodeList() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "994", "name": "Test discount code 1", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3530", "name": "Discount charge cat" }, "discount": { "id": "830" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1014", "name": "DF10", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3530", "name": "Discount charge cat" }, "discount": { "id": "850" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1016", "name": "Test D", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "854" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1042", "name": "DSU NEW", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "882" }, "limit": 10, "uses": 0, "unlimited": false, "price_list": { "id": "776", "name": "DSU 1" } }, { "id": "1044", "name": "DS", "status": "ACTIVE", "valid_from": "2016-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "884" }, "uses": 15, "unlimited": true, "price_list": { "id": "780", "name": "CPQ Price List" } }, { "id": "1046", "name": "DSU UNLIM", "status": "ACTIVE", "description": "qweqwe", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "882" }, "uses": 0, "unlimited": false, "price_list": { "id": "778", "name": "DSU 2" } }, { "id": "1048", "name": "DSU UNLIM DEFAULT", "status": "SUSPENDED", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "830" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDiscountCode>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDiscountCode>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Charge Catogory for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryChargeCatogory() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category", "description": "Default Adjustment Category", "priority": 1, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "2884", "name": "Default", "description": "Default Price Category", "priority": 1, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "2944", "name": "Custom PC", "priority": 3, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "2946", "name": "WT PM", "priority": 4, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "2948", "name": "Credit Card", "priority": 5, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "3068", "name": "PaymentCategotry_Pay", "priority": 6, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "3078", "name": "Kostyas Payment Category", "priority": 7, "status": "ACTIVE" }, { "charge_category_type": "usage-charge", "id": "3182", "name": "def charge cat", "priority": 8, "status": "ACTIVE" }, { "charge_category_type": "tax", "id": "3202", "name": "Tax", "description": "Default", "priority": 2, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "3204", "name": "Price-1", "description": "Test Description", "priority": 9, "status": "CANCELED" }, { "charge_category_type": "adjustment", "id": "3238", "name": "Adjustment", "priority": 10, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "3240", "name": "Price Taxable", "priority": 11, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "3242", "name": "Test01 Solomiia Price CC", "priority": 12, "status": "ACTIVE" }, { "charge_category_type": "adjustment", "id": "3244", "name": "Test01 Solomiia Adjustment CC", "priority": 13, "status": "ACTIVE" }, { "charge_category_type": "manual-invoice", "id": "3384", "name": "Default Manual Invoice Charge Category", "description": "Default Manual Invoice Charge Category", "status": "ACTIVE" }, { "charge_category_type": "additional-fee", "id": "3414", "name": "Add fee category", "description": "desc", "priority": 14, "status": "ACTIVE" }, { "charge_category_type": "additional-fee", "id": "3416", "name": "Fee cat K", "priority": 15, "status": "ACTIVE" }, { "charge_category_type": "manual-invoice", "id": "3424", "name": "Invoice Category 1", "priority": 16, "status": "ACTIVE" }, { "charge_category_type": "manual-invoice", "id": "3426", "name": "Inv charge cat 2", "description": "qwe", "priority": 17, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "3502", "name": "Test01 Solomiia Payment CC (WT)", "description": "Test01 Solomiia Payment CC (Wire Transfer)", "priority": 18, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "3504", "name": "Test02 Solomiia Payment CC (Refund)", "priority": 19, "status": "ACTIVE" }, { "charge_category_type": "adjustment", "id": "3506", "name": "Late Payment Category", "priority": 20, "status": "ACTIVE" }, { "charge_category_type": "discount", "id": "3530", "name": "Discount charge cat", "description": "Discount charge cat", "priority": 21, "status": "ACTIVE" }, { "charge_category_type": "adhoc", "id": "3546", "name": "Adhoc category", "description": "default", "priority": 22, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "3626", "name": "Price K", "priority": 23, "status": "ACTIVE" }, { "charge_category_type": "discount", "id": "3634", "name": "Disc K test", "priority": 24, "status": "ACTIVE" }, { "charge_category_type": "discount", "id": "3636", "name": "Kdiscount", "priority": 25, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "4190", "name": "SZH Payment Category", "priority": 26, "status": "ACTIVE" }, { "charge_category_type": "adhoc", "id": "4204", "name": "Adhoc Category1", "priority": 27, "status": "ACTIVE" }, { "charge_category_type": "manual-invoice", "id": "4206", "name": "Manual Invoice", "description": "test", "priority": 28, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4210", "name": "CPQ Price Charge Category", "priority": 29, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "4212", "name": "Payment Category", "priority": 30, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4214", "name": "kbory Price", "priority": 31, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4226", "name": "CPQ 2 Price Charge Category", "priority": 32, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4228", "name": "CPQ 3 Price Charge Category", "priority": 33, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4248", "name": "Test02 SZH Price CC (OTC)", "priority": 34, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4250", "name": "CPQ 4 Price Charge Category", "priority": 35, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4312", "name": "price category y", "priority": 36, "status": "ACTIVE" }, { "charge_category_type": "usage-charge", "id": "4314", "name": "usage charge y", "priority": 37, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4318", "name": "bmart_charge price category", "priority": 38, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4320", "name": "bmart_charge price category1", "priority": 39, "status": "ACTIVE" }, { "charge_category_type": "price", "id": "4332", "name": "CPC", "priority": 40, "status": "ACTIVE" }, { "charge_category_type": "usage-charge", "id": "4458", "name": "Usage Taxable", "priority": 41, "status": "ACTIVE" }, { "charge_category_type": "discount", "id": "4460", "name": "Discount N", "priority": 42, "status": "ACTIVE" }, { "charge_category_type": "additional-fee", "id": "4462", "name": "Additional Fee N", "priority": 43, "status": "ACTIVE" }, { "charge_category_type": "usage-charge", "id": "5564", "name": "szh category", "priority": 44, "status": "SUSPENDED" }, { "charge_category_type": "price", "id": "5602", "name": "830 1540 charge price cat", "priority": 45, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "5604", "name": "Test03 Solomiia Payment CC (Cancel)", "priority": 46, "status": "ACTIVE" }, { "charge_category_type": "payment", "id": "5620", "name": "ROMAN Payment C", "priority": 47, "status": "ACTIVE" }, { "charge_category_type": "adjustment", "id": "5760", "name": "Test02 Solomiia Adjustment CC", "priority": 48, "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIChargeCategory>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIChargeCategory>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Rate Tables for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryRateTables() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "302", "uom": "MINUTE", "name": "Test-1", "status": "ACTIVE" }, { "id": "378", "uom": "MINUTE", "name": "SZH Rate Table", "status": "ACTIVE" }, { "id": "394", "uom": "MEGABYTE", "name": "SZH Table megabyte", "status": "ACTIVE" }, { "id": "604", "uom": "MINUTE", "name": "Jet Rental In-Flight Call Rates per Minute 2", "status": "DRAFT" }, { "id": "674", "uom": "COUNT", "name": "SM", "status": "ACTIVE" }, { "id": "696", "uom": "CURRENCY", "name": "827 1842 rate table", "status": "ACTIVE" }, { "id": "698", "uom": "SECOND", "name": "qweqweqwe", "status": "DRAFT" }, { "id": "702", "uom": "MINUTE", "name": "AM RT 11", "status": "ACTIVE", "description": "2232" }, { "id": "704", "uom": "DAY", "name": "AM RT 2", "status": "SUSPENDED" }, { "id": "710", "uom": "DAY", "name": "AM RT 3", "status": "DRAFT" }, { "id": "716", "uom": "MEGABYTE", "name": "ak", "status": "ACTIVE" }, { "id": "728", "uom": "DAY", "name": "rate table for usage rules #1", "status": "ACTIVE" }, { "id": "734", "uom": "MILLISECOND", "name": "SS 1", "status": "SUSPENDED" }, { "id": "738", "uom": "GIGABITS_PER_SECOND", "name": "1155", "status": "DRAFT" }, { "id": "740", "uom": "MILLISECOND", "name": "svtRate1", "status": "DRAFT", "description": "stringzzz" }, { "id": "742", "uom": "BYTE", "name": "svtRate2", "status": "DRAFT", "description": "stringzzz" }, { "id": "744", "uom": "WEEK", "name": "new 01", "status": "SUSPENDED" }, { "id": "764", "uom": "MINUTE", "name": "BOT_Supplier_Rate", "status": "ACTIVE" }, { "id": "768", "uom": "DAY", "name": " rate table for usage rules #10", "status": "DRAFT", "description": "additional information" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIRateTable>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIRateTable>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Usage Rule for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryUsageRule() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "usage_rule_type": "service", "id": "8582", "name": "testtt", "status": "ACTIVE", "allowanceAmount": 10, "usageUom": "SECOND", "rule_order": 1, "prorated_on_order": true, "prorated_on_cancel": true, "roll_over_type": "UNCAPPED", "allowanceType": "RECURRING", "valid_from": "2019-05-22T05:17:16-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usageRate": { "rate_type": "flat", "id": "60194", "uom": "MILLISECOND", "rate": 5, "valid_from": "2019-05-22T05:17:16-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5938", "name": "0082" } } }, { "usage_rule_type": "service", "id": "8592", "name": "test2", "status": "ACTIVE", "allowanceAmount": 123, "usageUom": "HOUR", "rule_order": 2, "prorated_on_order": true, "prorated_on_cancel": true, "roll_over_type": "UNCAPPED", "allowanceType": "RECURRING", "valid_from": "2019-05-22T05:17:16-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "formula", "id": "66744", "operator": "GREATER_THAN", "field_name": "TEXT05", "field_value": "123" }, "usageRate": { "rate_type": "table", "id": "60272", "uom": "MINUTE", "valid_from": "2019-05-22T05:17:16-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5938", "name": "0082" }, "rate_table": { "id": "378", "name": "SZH Rate Table" }, "usage_field_name": "TEXT05" } }, { "usage_rule_type": "service", "id": "8594", "name": "test3", "status": "ACTIVE", "allowanceAmount": 13, "usageUom": "TERABYTE", "rule_order": 3, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "UNCAPPED", "allowanceType": "ONE_TIME", "valid_from": "2019-05-22T05:17:16-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usageRate": { "rate_type": "pass-through", "id": "60274", "uom": "EVENT", "valid_from": "2019-05-22T05:17:16-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5944", "name": "0073_Usage Charge Cat" }, "usage_field_name": "NUMBER02" } }, { "usage_rule_type": "service", "id": "8596", "name": "test4", "status": "DRAFT", "allowanceAmount": -1, "usageUom": "SECOND", "rule_order": 4, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "NONE", "allowanceType": "UNLIMITED", "valid_from": "2019-05-22T05:17:16-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usageRate": { "rate_type": "flat", "id": "60276", "uom": "SECOND", "rate": 4, "valid_from": "2019-05-22T05:17:16-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5938", "name": "0082" } } }, { "usage_rule_type": "service", "id": "8598", "name": "sdfd", "status": "DRAFT", "allowanceAmount": -1, "usageUom": "MINUTE", "rule_order": 5, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "NONE", "allowanceType": "UNLIMITED", "valid_from": "2019-05-22T05:17:16-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usageRate": { "rate_type": "table", "id": "60278", "uom": "MINUTE", "valid_from": "2019-05-22T05:17:16-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5944", "name": "0073_Usage Charge Cat" }, "rate_table": { "id": "378", "name": "SZH Rate Table" }, "usage_field_name": "DATE01" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIServiceUsageRule>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIServiceUsageRule>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Billing Account Category for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryBillingAccountCategory() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "938", "description": "Default billing account category", "status": "ACTIVE", "name": "All Accounts", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "940", "status": "ACTIVE", "name": "AC 5/15", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "942", "status": "ACTIVE", "name": "AC_2 5/15", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "962", "status": "ACTIVE", "name": "AC_01", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "964", "status": "ACTIVE", "name": "AC_03", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "1016", "status": "ACTIVE", "name": "Billing Account_01", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "1018", "status": "ACTIVE", "name": "Account_02 test", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "1048", "status": "ACTIVE", "name": "AC_01 7/11", "payment_term": { "id": "1062", "name": "Net 30" }, "auto_pay_offset": -30, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "1052", "status": "ACTIVE", "name": "AC_01 7/12", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, { "id": "1054", "description": "qwer", "status": "ACTIVE", "name": "AC_01 7/13", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccountCategory>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccountCategory>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Order Custom Fields for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryOrderCustomFields() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "custom_field_type": "order", "id": "1374", "name": "Order custom", "description": "ocf", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "1930", "name": "test", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "order", "id": "1934", "name": "Test Custom Field", "enabled": true, "searchable": false, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1010", "status": "ACTIVE", "value": "Test1" }, { "id": "1012", "status": "ACTIVE", "value": "Test2" } ] }, { "custom_field_type": "order", "id": "1956", "name": "AK - Additional item", "description": "Additional field for an order", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "1984", "name": "tt", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DATE", "references": [ { "id": "1102", "status": "ACTIVE", "value": "01/01/2017" }, { "id": "1104", "status": "ACTIVE", "value": "02/01/2017" } ] }, { "custom_field_type": "order", "id": "2054", "name": "amyrgor Date", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "order", "id": "2196", "name": "szh text", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "2198", "name": "szh boolean", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "order", "id": "2200", "name": "szh decimal", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "order", "id": "2202", "name": "szh date", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "order", "id": "2204", "name": "szh integer", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "order", "id": "2206", "name": "szh custom", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "CUSTOM", "references": [], "reg_ex": "qwerty" }, { "custom_field_type": "order", "id": "2208", "name": "szh list", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "2250", "name": "disabled CF", "enabled": false, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "2332", "name": "sample custom field on order #1", "description": "for API guide", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "order", "id": "2418", "name": "NNorder33", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIOrderCustomField>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIOrderCustomField>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Account Custom Fields for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryAccountCustomFields() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "custom_field_type": "billing-account", "id": "1420", "name": "299739", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "billing-account", "id": "1914", "name": "625 1637 cf", "description": "my description", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "998", "status": "ACTIVE", "value": "first val" }, { "id": "1000", "status": "ACTIVE", "value": "second val" } ] }, { "custom_field_type": "billing-account", "id": "2052", "name": "amyrgor CF 1", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "billing-account", "id": "2106", "name": "test", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "billing-account", "id": "2180", "name": "szh text CF", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "billing-account", "id": "2182", "name": "szh boolean", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "billing-account", "id": "2184", "name": "szh decimal", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "billing-account", "id": "2186", "name": "szh date", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "billing-account", "id": "2188", "name": "szh integer", "description": "GTP 1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "billing-account", "id": "2190", "name": "szh custom", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "CUSTOM", "references": [], "reg_ex": "asd" }, { "custom_field_type": "billing-account", "id": "2192", "name": "szh list", "description": "GTP-1073", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1118", "status": "SUSPENDED", "value": "asd" } ] }, { "custom_field_type": "billing-account", "id": "2194", "name": "szh list 2", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "billing-account", "id": "2224", "name": "account custom cf", "description": "test akrut", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "CUSTOM", "references": [], "reg_ex": "123" }, { "custom_field_type": "billing-account", "id": "2226", "name": "account custom list cf", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "CUSTOM", "references": [ { "id": "1120", "status": "ACTIVE", "value": "456" } ], "reg_ex": "456" }, { "custom_field_type": "billing-account", "id": "2248", "name": "disabled CF", "enabled": false, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "billing-account", "id": "2292", "name": "0062", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "billing-account", "id": "2326", "name": "sample custom field #1", "description": "custom field for API guide", "enabled": false, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "billing-account", "id": "2328", "name": "sample custom field #2", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "billing-account", "id": "2340", "name": "sample list account billing OK", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1144", "status": "ACTIVE", "value": "1" }, { "id": "1146", "status": "ACTIVE", "value": "2" }, { "id": "1148", "status": "ACTIVE", "value": "3" } ] }, { "custom_field_type": "billing-account", "id": "2414", "name": "NN", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccountCustomField>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccountCustomField>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Account Custom Field Values for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryAccountCustomFieldValues() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "custom_field_value_type": "billing-account", "id": "172270", "value": "sssssddsda", "customField": { "custom_field_type": "billing-account", "id": "1420", "name": "299739" } }, { "custom_field_value_type": "billing-account", "id": "172272", "value": "first val", "customField": { "custom_field_type": "billing-account", "id": "1914", "name": "625 1637 cf" } }, { "custom_field_value_type": "billing-account", "id": "172538", "value": "true", "customField": { "custom_field_type": "billing-account", "id": "2052", "name": "amyrgor CF 1" } }, { "custom_field_value_type": "billing-account", "id": "172540", "value": "true", "customField": { "custom_field_type": "billing-account", "id": "2182", "name": "szh boolean" } }, { "custom_field_value_type": "billing-account", "id": "172542", "value": "5.5", "customField": { "custom_field_type": "billing-account", "id": "2184", "name": "szh decimal" } }, { "custom_field_value_type": "billing-account", "id": "172544", "value": "123335", "customField": { "custom_field_type": "billing-account", "id": "2180", "name": "szh text CF" } }, { "custom_field_value_type": "billing-account", "id": "172546", "value": "123456", "customField": { "custom_field_type": "billing-account", "id": "2188", "name": "szh integer" } }, { "custom_field_value_type": "billing-account", "id": "172548", "value": "asd", "customField": { "custom_field_type": "billing-account", "id": "2192", "name": "szh list" } }, { "custom_field_value_type": "billing-account", "id": "172550", "value": "456", "customField": { "custom_field_type": "billing-account", "id": "2226", "name": "account custom list cf" } }, { "custom_field_value_type": "billing-account", "id": "172552", "value": "5.6", "customField": { "custom_field_type": "billing-account", "id": "2292", "name": "0062" } }, { "custom_field_value_type": "billing-account", "id": "172554", "value": "234567", "customField": { "custom_field_type": "billing-account", "id": "2328", "name": "sample custom field #2" } }, { "custom_field_value_type": "billing-account", "id": "172556", "value": "3", "customField": { "custom_field_type": "billing-account", "id": "2340", "name": "sample list account billing OK" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccountCustomFieldVal>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccountCustomFieldVal>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy PriceLists for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPriceLists() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "696", "name": "Default Price List" }, { "id": "776", "name": "DSU 1", "description": "First Price List" }, { "id": "778", "name": "DSU 2", "description": "Second Price List" }, { "id": "780", "name": "CPQ Price List" }, { "id": "798", "name": "kbory" }, { "id": "880", "name": "830 1614 Price List" }, { "id": "884", "name": "amyrgor PL" }, { "id": "914", "name": "asdsadasdasd" }, { "id": "926", "name": "adasdads", "description": "asdasd" }, { "id": "928", "name": "!", "description": "Amyrgor 111Amyrgor 111Amyrgor" }, { "id": "930", "name": "efdsdfsdf" }, { "id": "942", "name": "Test PL 1", "description": "Test Description 001" }, { "id": "944", "name": "Test PL 2", "description": "Test Description 002" }, { "id": "946", "name": "2" }, { "id": "954", "name": "AK Price List", "description": "" }, { "id": "956", "name": "NameFromPostman_ApiNG79543950305" }, { "id": "996", "name": "111", "description": "22234" }, { "id": "998", "name": "Test Price List - UI 2.0 ", "description": "Lorem ipsum dolor sit ametxq" }, { "id": "1116", "name": "test-3053(0)" }, { "id": "1118", "name": "test-3053(1)" }, { "id": "1120", "name": "qa", "description": "qa" }, { "id": "1124", "name": "12345" }, { "id": "1126", "name": "Alona PL", "description": "Alona PL ui2" }, { "id": "1130", "name": "GTP-3279 Price List" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIPriceList>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIPriceList>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Payment Terms for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryPaymentTerms() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "1060", "name": "Immediate", "term_days": 0, "grace_days": 0 }, { "id": "1062", "name": "Net 30", "term_days": 30, "grace_days": 0 }, { "id": "1138", "name": "Net K", "term_days": 20, "grace_days": 0 }, { "id": "1140", "name": "Payment K", "term_days": 10, "grace_days": 0 }, { "id": "1142", "name": "Test", "term_days": 18, "grace_days": 0 }, { "id": "1156", "name": "Test2", "term_days": 21, "grace_days": 0 }, { "id": "1162", "name": "Payment Test K", "term_days": 20, "grace_days": 0 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIPaymentTerm>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIPaymentTerm>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Agreements for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryAgreements() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id":"3314", "name":"Test01 Solomiia Agreement (Renew, 1 Month)", "agreement_period":1, "status":"ACTIVE", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3244", "name":"Test01 Solomiia Adjustment CC" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-16T10:51:56-05:00", "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3326", "name":"Agreement-1", "agreement_period":1, "status":"SUSPENDED", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"2882", "name":"Default Adjustment Category" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-22T04:33:34-05:00", "valid_to":"2017-08-22T04:33:41-05:00", "next_agreement":{ "id":"3328", "name":"Agreement-1" }, "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3328", "name":"Agreement-1", "agreement_period":1, "status":"SUSPENDED", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"2882", "name":"Default Adjustment Category" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-22T04:33:41-05:00", "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3330", "name":"Agreement-2", "agreement_period":1, "status":"SUSPENDED", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3238", "name":"Adjustment" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-22T05:54:57-05:00", "valid_to":"2017-08-22T05:55:53-05:00", "next_agreement":{ "id":"3332", "name":"Agreement-2" }, "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3332", "name":"Agreement-2", "agreement_period":1, "status":"SUSPENDED", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3238", "name":"Adjustment" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-22T05:55:53-05:00", "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3336", "name":"Agr test", "agreement_period":1, "status":"ACTIVE", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3238", "name":"Adjustment" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-08-23T09:34:43-05:00", "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3368", "name":"API Deactiv", "agreement_period":1, "status":"SUSPENDED", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3238", "name":"Adjustment" }, "endAction":"DEACTIVATE_SERVICE", "termination_fee_currency_code":"USD", "valid_from":"2017-09-11T03:48:35-05:00", "valid_to":"2017-09-11T04:14:08-05:00", "next_agreement":{ "id":"3370", "name":"API Deactiv" }, "agreementPeriodType":"MONTH", "preserve_service_price":true }, { "id":"3370", "name":"API Deactiv", "agreement_period":1, "status":"ACTIVE", "termination_flat_charge":0, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"3238", "name":"Adjustment" }, "endAction":"DEACTIVATE_SERVICE", "termination_fee_currency_code":"USD", "valid_from":"2017-09-11T04:14:08-05:00", "agreementPeriodType":"DAY", "preserve_service_price":true }, { "id":"3524", "name":"DSU AGR", "agreement_period":10, "status":"ACTIVE", "termination_flat_charge":2, "prorateOnCancel":false, "adjustment_category":{ "charge_category_type":"adjustment", "id":"2882", "name":"Default Adjustment Category" }, "endAction":"RENEW_AGREEMENT", "termination_fee_currency_code":"USD", "valid_from":"2017-12-05T07:04:08-06:00", "agreementPeriodType":"DAY", "preserve_service_price":true } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIAgreement>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIAgreement>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Relation for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductRelation() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "31938", "product": { "product_type": "add-on", "id": "35299", "name": "01 CPQ Add-On", "sku": "sku-2" }, "productRelationType": "PARENT" }, { "id": "32836", "product": { "product_type": "add-on", "id": "27690", "name": "0060_Add" }, "productRelationType": "RECOMMENDED" }, { "id": "33610", "product": { "product_type": "add-on", "id": "28178", "name": "0049_Add" }, "productRelationType": "INCOMPATIBLE", "scope": "ORDER" }, { "id": "33612", "product": { "product_type": "add-on", "id": "28186", "name": "0051_Add-USD" }, "productRelationType": "RECOMMENDED" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductRelation>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductRelation>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Services for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryServices() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "2080918", "amount": 100, "status": "DEACTIVATED", "product": { "product_type": "customer-subscription", "id": "35299", "name": "Subproduct 5/15" }, "description": "Subproduct 5/15", "quantity": 1, "startDate": "2016-06-01T00:00:00-05:00", "endDate": "2019-03-20T00:00:00-05:00", "status_reason": { "reason_type": "service-deactivation", "id": "1748", "name": "Default Service Deactivation Reason", "description": "Default Service Deactivation Reason Description", "status": "ACTIVE" }, "billing_account": { "id": "1413200", "account_num": "11", "external_account_num": null }, "status_date": "2019-03-20T00:00:00-05:00", "service_resources": [], "service_prices": [ { "price_type": "service", "id": "2329216", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "amount": 100, "startDate": "2016-06-01T00:00:00-05:00", "bill_in_advance": true, "service_price_ranges": [ { "price_range_type": "service", "id": "2336128", "price": 100, "quantity_begin_range": 0, "currency_code": "USD" } ], "recurrence_period": "BILL_CYCLE", "product_price": { "product_price_type": "recurring", "id": "18536" }, "estimated_invoice_amount": 100, "invoice_quantity": 1, "prorate_on_cancel": false } ], "renewal_count": 0, "custom_field_values": [], "addresses": [ { "address_type": "postal", "id": "2894676", "purpose": "SERVICE", "country": "USA", "city": "NY", "line1": "123 Congress Avenue A", "line2": "Suite 100", "region_or_state": "NY", "postal_code": "10001" } ], "consume_prepaid_balance": false, "usage_rules": [] }, { "id": "2157406", "amount": 100, "status": "ACTIVE", "product": { "product_type": "customer-subscription", "id": "12710", "name": "Subproduct 5/15" }, "description": "Subproduct 5/15", "quantity": 1, "startDate": "2018-12-17T10:32:25-06:00", "billing_account": { "id": "1413200", "account_num": "11", "external_account_num": null }, "status_date": "2019-03-20T03:55:52-05:00", "service_resources": [], "service_prices": [ { "price_type": "service", "id": "2452872", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "amount": 100, "startDate": "2018-12-17T10:32:25-06:00", "bill_in_advance": true, "service_price_ranges": [ { "price_range_type": "service", "id": "2467522", "price": 100, "quantity_begin_range": 0, "currency_code": "USD" } ], "recurrence_period": "BILL_CYCLE", "product_price": { "product_price_type": "recurring", "id": "18536" }, "estimated_invoice_amount": 100, "invoice_quantity": 1, "prorate_on_cancel": false } ], "renewal_count": 0, "custom_field_values": [], "addresses": [ { "address_type": "postal", "id": "3124398", "purpose": "SERVICE", "country": "AFG", "city": "test", "line1": "test", "region_or_state": "", "postal_code": "29033" } ], "consume_prepaid_balance": false, "usage_rules": [] }, { "id": "2160240", "amount": 111, "status": "ACTIVE", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "description": "000-111-222-333", "quantity": 1, "startDate": "2019-01-14T00:00:00-06:00", "billing_account": { "id": "1413200", "account_num": "11", "external_account_num": null }, "status_date": "2019-01-14T00:00:00-06:00", "service_resources": [{"id":"2458474"}], "service_prices": [ { "price_type": "service", "id": "2458474", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "amount": 111, "startDate": "2019-01-14T00:00:00-06:00", "bill_in_advance": true, "service_price_ranges": [ { "price_range_type": "service", "id": "2473878", "price": 111, "quantity_begin_range": 0, "currency_code": "USD" } ], "recurrence_period": "BILL_CYCLE", "product_price": { "product_price_type": "recurring", "id": "42618" }, "estimated_invoice_amount": 111, "invoice_quantity": 1, "prorate_on_cancel": false } ], "renewal_count": 0, "custom_field_values": [], "addresses": [ { "address_type": "postal", "id": "3123490", "purpose": "SERVICE", "country": "CAN", "city": "test", "line1": "test", "region_or_state": "ON", "postal_code": "A0A0A0" } ], "consume_prepaid_balance": false, "usage_rules": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPISFService>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPISFService>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Resource Category for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryResourceCategory() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "1266", "name": "Default", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1384", "name": "Discount code category", "resource_type": "discount", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1602", "name": "dsu-test", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1718", "name": "123", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1726", "name": "ak80", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1758", "name": "szh suspended", "resource_type": "service", "status": "SUSPENDED", "allow_multiple_services": false }, { "id": "1760", "name": "szh ava", "resource_type": "service", "status": "SUSPENDED", "allow_multiple_services": false }, { "id": "1762", "name": "szh ava2", "resource_type": "service", "status": "SUSPENDED", "allow_multiple_services": false }, { "id": "1764", "name": "szh test", "resource_type": "service", "status": "CANCELED", "allow_multiple_services": false }, { "id": "1768", "name": "szh discount category", "resource_type": "discount", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1770", "name": "\\n", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1772", "name": "szh test quarant", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1774", "name": "sample resource category #1", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": true }, { "id": "1776", "name": "szh test 2", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1778", "name": "szh 1712 AVAILABLE", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1780", "name": "szh 1712", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": false }, { "id": "1796", "name": "Test UI AK", "resource_type": "service", "status": "ACTIVE", "allow_multiple_services": true } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIResourceCategory>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIResourceCategory>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Credit Adjustment Reason for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryCreditAdjustmentReason() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "1296", "name": "Default Debit Adjustment Reason", "description": "Default Debit Adjustment Reason", "status": "ACTIVE", "level": "PRIMARY" }, { "id": "1498", "name": "01", "status": "ACTIVE", "level": "PRIMARY" }, { "id": "1526", "name": "Tax debit Adjustment reason", "status": "ACTIVE", "level": "PRIMARY" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIAdjustmentReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIAdjustmentReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Service Deactivation Reasons for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryServiceDeactivationReasons() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "reason_type": "service-deactivation", "id": "1748", "name": "Default Service Deactivation Reason", "description": "Default Service Deactivation Reason Description", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "1904", "name": "API Deactiv", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "1914", "name": "Api1", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "3024", "name": "Test01 Solomiia Service Deactivation Reason", "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIServiceDeactivationReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIServiceDeactivationReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Service Suspension Reasons for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryServiceSuspensionReasons() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "reason_type": "service-deactivation", "id": "1748", "name": "Default Service Deactivation Reason", "description": "Default Service Deactivation Reason Description", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "1904", "name": "API Deactiv", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "1914", "name": "Api1", "status": "ACTIVE" }, { "reason_type": "service-deactivation", "id": "3024", "name": "Test01 Solomiia Service Deactivation Reason", "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIServiceSuspensionReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIServiceSuspensionReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to create Dummy CreditAdjustment for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper createCreditAdjustment() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "id": "91762", "amount": 100, "description": "test", "invoiced": false, "status": "PENDING", "reason": { "id": "1294", "name": "Default Credit Adjustment Reason" }, "credit": true, "occurred_on": "2019-06-19T06:09:13-05:00", "adjustment_type": "MANUAL", "billing_account": { "id": "1496224", "account_num": "M64", "external_account_num": null }, "unapplied_amount": 0, "items": [ { "adjustment_item_type": "manual", "id": "92156", "amount": 100, "description": "test", "reason": { "id": "1294", "name": "Default Credit Adjustment Reason" }, "category": { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category" } } ], "credit_number": "M51", "manual_invoice_application": true }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPICreditAccountAdjustment) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPICreditAccountAdjustment.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Dedit Adjustment Reason for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryDeditAdjustmentReason() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "1296", "name": "Default Debit Adjustment Reason", "description": "Default Debit Adjustment Reason", "status": "ACTIVE", "level": "PRIMARY" }, { "id": "1498", "name": "01", "status": "ACTIVE", "level": "PRIMARY" }, { "id": "1526", "name": "Tax debit Adjustment reason", "status": "ACTIVE", "level": "PRIMARY" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIAdjustmentReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIAdjustmentReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to create Dummy debit Adjustment for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper createdebitAdjustment() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "id": "91808", "amount": 100, "description": "test", "invoiced": false, "status": "PENDING", "reason": { "id": "1296", "name": "Default Debit Adjustment Reason" }, "credit": false, "occurred_on": "2019-06-19T06:14:15-05:00", "adjustment_type": "MANUAL", "billing_account": { "id": "1496224", "account_num": "M64", "external_account_num": null }, "unapplied_amount": 0, "items": [ { "adjustment_item_type": "manual", "id": "92202", "amount": 100, "description": "test", "reason": { "id": "1296", "name": "Default Debit Adjustment Reason" }, "category": { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category" } } ] }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIDebitAccountAdjustment) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIDebitAccountAdjustment.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Billing Account Deativation Reasons for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getBillingAccountDeativationReasons() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "reason_type": "billing-account-deactivation", "id": "3026", "name": "Test01 Solomiia BA Deactivation Reason", "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccountDeactivationReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccountDeactivationReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Billing Account Suspension Reasons for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getBillingAccountSuspensionReasons() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "reason_type": "billing-account-suspension", "id": "1968", "name": "Test01 BA Suspension Reason", "status": "ACTIVE" }, { "reason_type": "billing-account-suspension", "id": "1970", "name": "Test02 BA Suspension Reason", "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIBillingAccountSuspensionReason>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIBillingAccountSuspensionReason>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy SalesOrder for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper querySalesOrder() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[{"order_type":"sales","id":"2183096","order_num":"223608088","orderItems":[{"order_item_type":"product","id":"2708850","quantity":1,"sequence":3,"product":{"productType":"general","id":"29576","name":"00mi one-time with scheduled charges"},"order_items":[],"status":"COMPLETED","extended_price":100,"awaiting_approval":false,"price_list":{"id":"696","name":"Default Price List"},"service_resources":[],"requested_effective_date":"2019-09-18T03:31:35-05:00","operation_run_attributes":[],"custom_field_values":[],"addresses":[],"fund_prepaid_balance":false,"orderItemPrices":[{"orderItemPriceType":"one-time","id":"2728500","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"5958","name":"akrut price tax"},"price_override":true,"amount":100,"product_price":{"product_price_type":"one-time","id":"49060","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"5958","name":"akrut price tax"},"valid_from":"2019-09-04T00:00:00-05:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"53208","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"charge_during_renewal":false,"allow_scheduled_charges":true},"price_ranges":[{"price_range_type":"order-item","id":"821626","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"granted_value_expiration_date":null,"scheduled_charges":[{"id":"25806","status":"ACTIVE","price_charge_type":"one-time","description":"fgrrrrrrrrrrrrrrrrrrrr","amount":100,"invoiced":false,"charge_date":"2019-09-18T23:59:59-05:00"}]}],"order_item_counters":[],"charges":[{"orderItemChargeType":"product-one-time","id":"3996218","amount":100,"tax_inclusive":true,"details":[{"charge_detail_type":"base-charge","id":"4514","amount":71.43},{"charge_detail_type":"tax-charge","id":"4516","amount":7.14,"tax_price_category":{"charge_category_type":"tax","id":"3202","name":"Tax","description":"Default","priority":2,"status":"ACTIVE"},"description":"Test Description","code":"TaxCode","level":"GST2","rate":0.1,"jurisdiction":"Local"},{"charge_detail_type":"tax-charge","id":"4518","amount":21.43,"tax_price_category":{"charge_category_type":"tax","id":"3202","name":"Tax","description":"Default","priority":2,"status":"ACTIVE"},"description":"Some description","code":"TaxCode","level":"MATCH_ALL","rate":0.3,"jurisdiction":"Local3"}],"price_category":{"charge_category_type":"price","id":"5958","name":"akrut price tax"},"overridden":false,"scheduledCharges":[{"id":"25806","status":"ACTIVE","price_charge_type":"one-time","description":"fgrrrrrrrrrrrrrrrrrrrr","amount":100,"invoiced":false,"charge_date":"2019-09-18T23:59:59-05:00"}]}]},{"order_item_type":"product","id":"2679616","quantity":1,"sequence":1,"product":{"product_type":"customer-subscription","id":"24128","name":"000-111-222-333"},"orderItems":[{"order_item_type":"add-on","id":"2679618","quantity":1,"sequence":2,"product":{"product_type":"add-on","id":"28186","name":"0051_Add-USD"},"orderitems":[{"order_item_type":"add-on","id":"2679618","quantity":1,"sequence":2,"product":{"product_type":"add-on","id":"28186","name":"0051_Add-USD"},"order_items":[],"description":"Test34566","status":"COMPLETED","extended_price":150,"awaiting_approval":false,"price_list":{"id":"696","name":"Default Price List"},"service_resources":[{"resource_type":"service","id":"51660","description":null,"category":{"id":"1266","name":"Default"},"status":"ACTIVE","identifier":"Test567890"}],"requested_effective_date":"2019-06-19T06:39:22-05:00","parentService":{"id":"2186904"},"operation_run_attributes":[],"orderItemAgreement":{"agreement":{"id":"4116","name":"810 1350 1 month renewal"},"endDate":"2019-07-19T00:00:00-05:00","endAction":"RENEW_AGREEMENT","preserve_service_price":true,"next_preserve_service_price":false,"true_up_charge_types":[],"agreementPeriod":1},"custom_field_values":[],"addresses":[],"consume_prepaid_balance":false,"orderItemPrices":[{"orderItemPriceType":"one-time","id":"2694820","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":50,"taxable_amount":0,"product_price":{"product_price_type":"one-time","id":"47428","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51546","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"charge_during_renewal":false,"allow_scheduled_charges":true},"price_ranges":[{"price_range_type":"order-item","id":"776844","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"granted_value_expiration_date":null,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"orderItemPriceType":"recurring","id":"2694822","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":100,"taxable_amount":0,"product_price":{"product_price_type":"recurring","id":"47426","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51544","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"recurring_payment_required":false,"recurrence_period":"BILL_CYCLE","prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true,"usage_rules":[{"usage_rule_type":"product","id":"7684","name":"3-0051","status":"ACTIVE","allowance_amount":-1,"allowance_uom":"MEGABYTE","rule_order":1,"prorated_on_order":false,"prorated_on_cancel":false,"roll_over_type":"NONE","allowance_type":"UNLIMITED","valid_from":"2018-01-01T00:00:00-06:00","rule_type":"TAPERED","spec":{"usage_rule_specification_type":"match-all"},"usage_rate":{"rate_type":"flat","id":"59002","uom":"MEGABYTE","rate":1,"valid_from":"2018-01-01T00:00:00-06:00","charge_category":{"charge_category_type":"usage-charge","id":"5944","name":"0073_Usage Charge Cat"}}}]},"price_ranges":[{"price_range_type":"order-item","id":"776846","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true}],"service":{"id":"2190206"},"order_item_counters":[],"charges":[{"order_item_charge_type":"product-one-time","id":"3946968","amount":50,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"order_item_charge_type":"product-recurring","id":"3946970","amount":100,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false}]}],"description":"Test34566","status":"COMPLETED","extended_price":150,"awaiting_approval":false,"price_list":{"id":"696","name":"Default Price List"},"service_resources":[{"resource_type":"service","id":"51660","description":null,"category":{"id":"1266","name":"Default"},"status":"ACTIVE","identifier":"Test567890"}],"requested_effective_date":"2019-06-19T06:39:22-05:00","parentService":{"id":"2186904"},"operation_run_attributes":[],"orderItemAgreement":{"agreement":{"id":"4116","name":"810 1350 1 month renewal"},"endDate":"2019-07-19T00:00:00-05:00","endAction":"RENEW_AGREEMENT","preserve_service_price":true,"next_preserve_service_price":false,"true_up_charge_types":[],"agreementPeriod":1},"custom_field_values":[],"addresses":[],"consume_prepaid_balance":false,"orderItemPrices":[{"orderItemPriceType":"one-time","id":"2694820","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":50,"taxable_amount":0,"product_price":{"product_price_type":"one-time","id":"47428","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51546","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"charge_during_renewal":false,"allow_scheduled_charges":true},"price_ranges":[{"price_range_type":"order-item","id":"776844","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"granted_value_expiration_date":null,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"orderItemPriceType":"recurring","id":"2694822","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":100,"taxable_amount":0,"product_price":{"product_price_type":"recurring","id":"47426","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51544","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"recurring_payment_required":false,"recurrence_period":"BILL_CYCLE","prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true,"usage_rules":[{"usage_rule_type":"product","id":"7684","name":"3-0051","status":"ACTIVE","allowance_amount":-1,"allowance_uom":"MEGABYTE","rule_order":1,"prorated_on_order":false,"prorated_on_cancel":false,"roll_over_type":"NONE","allowance_type":"UNLIMITED","valid_from":"2018-01-01T00:00:00-06:00","rule_type":"TAPERED","spec":{"usage_rule_specification_type":"match-all"},"usage_rate":{"rate_type":"flat","id":"59002","uom":"MEGABYTE","rate":1,"valid_from":"2018-01-01T00:00:00-06:00","charge_category":{"charge_category_type":"usage-charge","id":"5944","name":"0073_Usage Charge Cat"}}}]},"price_ranges":[{"price_range_type":"order-item","id":"776846","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true}],"service":{"id":"2190206"},"order_item_counters":[],"charges":[{"order_item_charge_type":"product-one-time","id":"3946968","amount":50,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"order_item_charge_type":"product-recurring","id":"3946970","amount":100,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false}]}],"description":"Tst1234","status":"COMPLETED","extended_price":111,"awaiting_approval":false,"price_list":{"id":"696","name":"Default Price List"},"serviceResources":[{"resource_type":"service","id":"51658","description":null,"category":{"id":"1266","name":"Default"},"status":"ACTIVE","identifier":"Test123456"}],"requested_effective_date":"2019-06-19T06:39:22-05:00","operation_run_attributes":[],"orderItemAgreement":{"agreement":{"id":"4116","name":"810 1350 1 month renewal"},"endDate":"2019-07-19T00:00:00-05:00","endAction":"RENEW_AGREEMENT","preserve_service_price":true,"next_preserve_service_price":false,"true_up_charge_types":[],"agreementPeriod":1},"custom_field_values":[],"addresses":[],"consume_prepaid_balance":false,"orderItemPrices":[{"orderItemPriceType":"recurring","id":"2694818","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":111,"taxable_amount":0,"product_price":{"product_price_type":"recurring","id":"42618","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2017-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"46468","price":111,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"recurring_payment_required":false,"recurrence_period":"BILL_CYCLE","prorated_on_order":false,"prorated_on_cancel":false,"prorated_on_order_no_charge":false,"bill_in_advance":true,"usage_rules":[]},"price_ranges":[{"price_range_type":"order-item","id":"776842","price":111,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"prorated_on_order":false,"prorated_on_cancel":false,"prorated_on_order_no_charge":false,"bill_in_advance":true}],"service":{"id":"2190204"},"order_item_counters":[],"charges":[{"order_item_charge_type":"product-recurring","id":"3946966","amount":111,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false}]},{"order_item_type":"add-on","id":"2679618","quantity":1,"sequence":2,"product":{"product_type":"add-on","id":"28186","name":"0051_Add-USD"},"orderItems":[],"description":"Test34566","status":"COMPLETED","extended_price":150,"awaiting_approval":false,"price_list":{"id":"696","name":"Default Price List"},"serviceResources":[{"resource_type":"service","id":"51660","description":null,"category":{"id":"1266","name":"Default"},"status":"ACTIVE","identifier":"Test567890"}],"requested_effective_date":"2019-06-19T06:39:22-05:00","parentService":{"id":"2186904"},"operation_run_attributes":[],"custom_field_values":[],"addresses":[],"consume_prepaid_balance":false,"orderItemPrices":[{"orderItemPriceType":"one-time","id":"2694820","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":50,"taxable_amount":0,"product_price":{"product_price_type":"one-time","id":"47428","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51546","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"charge_during_renewal":false,"allow_scheduled_charges":true},"price_ranges":[{"price_range_type":"order-item","id":"776844","price":50,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"granted_value_expiration_date":null,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"orderItemPriceType":"recurring","id":"2694822","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"price_override":true,"amount":100,"taxable_amount":0,"product_price":{"product_price_type":"recurring","id":"47426","tapered":false,"currency_code":"USD","category":{"charge_category_type":"price","id":"2884","name":"Default"},"valid_from":"2018-01-01T00:00:00-06:00","price_override":true,"price_ranges":[{"price_range_type":"product","id":"51544","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"payment_on_purchase_required":false,"price_group":null,"recurring_payment_required":false,"recurrence_period":"BILL_CYCLE","prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true,"usage_rules":[{"usage_rule_type":"product","id":"7684","name":"3-0051","status":"ACTIVE","allowance_amount":-1,"allowance_uom":"MEGABYTE","rule_order":1,"prorated_on_order":false,"prorated_on_cancel":false,"roll_over_type":"NONE","allowance_type":"UNLIMITED","valid_from":"2018-01-01T00:00:00-06:00","rule_type":"TAPERED","spec":{"usage_rule_specification_type":"match-all"},"usage_rate":{"rate_type":"flat","id":"59002","uom":"MEGABYTE","rate":1,"valid_from":"2018-01-01T00:00:00-06:00","charge_category":{"charge_category_type":"usage-charge","id":"5944","name":"0073_Usage Charge Cat"}}}]},"price_ranges":[{"price_range_type":"order-item","id":"776846","price":100,"level":1,"quantity_begin_range":0,"currency_code":"USD"}],"price_group":null,"prorated_on_order":false,"prorated_on_cancel":true,"prorated_on_order_no_charge":false,"bill_in_advance":true}],"service":{"id":"2190206"},"order_item_counters":[],"charges":[{"order_item_charge_type":"product-one-time","id":"3946968","amount":50,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false,"scheduled_charges":[{"id":"25100","status":"ACTIVE","price_charge_type":"one-time","description":"test","amount":50,"invoiced":false,"charge_date":"2019-06-19T23:59:59-05:00"}]},{"order_item_charge_type":"product-recurring","id":"3946970","amount":100,"price_category":{"charge_category_type":"price","id":"2884","name":"Default"},"overridden":false}]}],"billing_account":{"id":"1496224","account_num":"M64","external_account_num":null},"email_receipt":true,"order_date":"2019-06-19T06:39:22-05:00","total_amount":261,"custom_field_values":[],"status":"COMPLETED","sub_total":261,"tax_total":0,"due_now_total":0,"due_now_tax_total":0}]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIOrder>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIOrder>.class
    );
    reswrap.totalPages = '2';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Agreements for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getAgreements() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "id": "4002", "name": "528 1112", "agreement_period": 9, "status": "SUSPENDED", "termination_flat_charge": 3, "prorate_on_cancel": false, "adjustment_category": { "charge_category_type": "adjustment", "id": "2882", "name": "Default Adjustment Category" }, "end_action": "RENEW_AGREEMENT", "termination_fee_currency_code": "USD", "valid_from": "2018-05-28T03:12:46-05:00", "valid_to": "2018-05-28T03:13:05-05:00", "next_agreement": { "id": "4004", "name": "528 1112 9 mon" }, "agreementPeriodType": "MONTH", "preserve_service_price": true }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIAgreement) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIAgreement.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Service Custom Fields for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryServiceCustomFields() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "custom_field_type": "service", "id": "1376", "name": "ddd", "description": "111", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "1954", "name": "UI testing", "description": "test service custom field for UI 2.0 testing", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "service", "id": "1958", "name": "qa", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "service", "id": "1960", "name": "qa2 date", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "service", "id": "2100", "name": "ak", "enabled": false, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2102", "name": "ak2", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "service", "id": "2108", "name": "date list", "description": "date: 25/01/2019 26/02/2019", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DATE", "references": [ { "id": "1110", "status": "ACTIVE", "value": "25/01/2019" }, { "id": "1112", "status": "ACTIVE", "value": "26/02/2019" } ] }, { "custom_field_type": "service", "id": "2178", "name": "list", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1114", "status": "ACTIVE", "value": "number1" }, { "id": "1116", "status": "ACTIVE", "value": "number2" } ] }, { "custom_field_type": "service", "id": "2210", "name": "szh text", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2212", "name": "szh boolean", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "service", "id": "2214", "name": "szh decimal", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "service", "id": "2216", "name": "szh date", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "service", "id": "2218", "name": "szh integer", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "service", "id": "2220", "name": "szh custom", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "CUSTOM", "references": [], "reg_ex": "fhgfg" }, { "custom_field_type": "service", "id": "2222", "name": "szh list", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1172", "status": "ACTIVE", "value": "sdf" } ] }, { "custom_field_type": "service", "id": "2242", "name": "Amyrgor 001", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2254", "name": "One-Time Custom Field A", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2256", "name": "One-Time Custom Field B", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2258", "name": "One-Time Custom Field C", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1126", "status": "ACTIVE", "value": "Test1" }, { "id": "1128", "status": "ACTIVE", "value": "Test2" } ] }, { "custom_field_type": "service", "id": "2266", "name": "Test 1", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "service", "id": "2268", "name": "Test 2.1", "description": "happiness", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DATE", "references": [ { "id": "1134", "status": "ACTIVE", "value": "01/04/2019" }, { "id": "1136", "status": "ACTIVE", "value": "01/05/2019" } ] }, { "custom_field_type": "service", "id": "2270", "name": "Test 0", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2274", "name": "ATest", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2334", "name": "Amyrgor list int", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "INTEGER", "references": [ { "id": "1138", "status": "ACTIVE", "value": "1" }, { "id": "1140", "status": "ACTIVE", "value": "0" }, { "id": "1142", "status": "ACTIVE", "value": "25" } ] }, { "custom_field_type": "service", "id": "2336", "name": "service custom field #1", "description": "sample for API guide", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2338", "name": "AM regex", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "CUSTOM", "references": [], "reg_ex": "qwerty123!" }, { "custom_field_type": "service", "id": "2342", "name": "a1", "description": "text", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2344", "name": "a2", "description": "boolean", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [] }, { "custom_field_type": "service", "id": "2346", "name": "a3", "description": "decimal", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "service", "id": "2348", "name": "a4", "description": "date", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [] }, { "custom_field_type": "service", "id": "2350", "name": "a5", "description": "integer", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "service", "id": "2352", "name": "a6", "description": "text list", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1150", "status": "ACTIVE", "value": "t1" }, { "id": "1152", "status": "ACTIVE", "value": "t2" } ] }, { "custom_field_type": "service", "id": "2354", "name": "a7", "description": "boolean list", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "BOOLEAN", "references": [ { "id": "1154", "status": "ACTIVE", "value": "true" }, { "id": "1156", "status": "ACTIVE", "value": "false" } ] }, { "custom_field_type": "service", "id": "2356", "name": "a8", "description": "list decimal", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DECIMAL", "references": [ { "id": "1158", "status": "ACTIVE", "value": "1.11" }, { "id": "1160", "status": "ACTIVE", "value": "2.22" }, { "id": "1162", "status": "ACTIVE", "value": "3.33" } ] }, { "custom_field_type": "service", "id": "2358", "name": "a9", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "DATE", "references": [ { "id": "1164", "status": "ACTIVE", "value": "01/01/2018" }, { "id": "1166", "status": "ACTIVE", "value": "10/10/2019" } ] }, { "custom_field_type": "service", "id": "2360", "name": "a10", "description": "list integer", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "INTEGER", "references": [ { "id": "1168", "status": "ACTIVE", "value": "1" }, { "id": "1170", "status": "ACTIVE", "value": "12" } ] }, { "custom_field_type": "service", "id": "2362", "name": "a11", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2364", "name": "a12", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2366", "name": "a13", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2368", "name": "a14", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "service", "id": "2370", "name": "a15", "enabled": true, "searchable": true, "field_type": "LIST", "field_validation_type": "TEXT", "references": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIServiceCustomField>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIServiceCustomField>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Discount Codes By Product for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getDiscountCodesByProduct() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "994", "name": "Test discount code 1", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3530", "name": "Discount charge cat" }, "discount": { "id": "830" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1014", "name": "DF10", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3530", "name": "Discount charge cat" }, "discount": { "id": "850" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1016", "name": "Test D", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "854" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } }, { "id": "1042", "name": "DSU NEW", "status": "ACTIVE", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "882" }, "limit": 10, "uses": 0, "unlimited": false, "price_list": { "id": "776", "name": "DSU 1" } }, { "id": "1044", "name": "DS", "status": "ACTIVE", "valid_from": "2016-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "884" }, "uses": 15, "unlimited": true, "price_list": { "id": "780", "name": "CPQ Price List" } }, { "id": "1046", "name": "DSU UNLIM", "status": "ACTIVE", "description": "qweqwe", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "882" }, "uses": 0, "unlimited": false, "price_list": { "id": "778", "name": "DSU 2" } }, { "id": "1048", "name": "DSU UNLIM DEFAULT", "status": "SUSPENDED", "valid_from": "2017-01-01T00:00:00-06:00", "discount_charge_category": { "charge_category_type": "discount", "id": "3634", "name": "Disc K test" }, "discount": { "id": "830" }, "uses": 0, "unlimited": false, "price_list": { "id": "696", "name": "Default Price List" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDiscountCode>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDiscountCode>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy SalesOrder for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper createSalesOrder() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "order_type": "sales", "id": "2191412", "order_num": "223698654", "order_items": [ { "order_item_type": "product", "id": "2688366", "quantity": 1, "sequence": 1, "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "order_items": [], "status": "COMPLETED", "extended_price": 111, "awaiting_approval": false, "price_list": { "id": "696", "name": "Default Price List" }, "service_resources": [], "requested_effective_date": "2019-07-15T05:11:48-05:00", "operation_run_attributes": [], "order_item_agreement": { "agreement": { "id": "4510", "name": "810 1350 1 month renewal" }, "end_date": "2019-08-15T00:00:00-05:00", "end_action": "RENEW_AGREEMENT", "preserve_service_price": false, "next_preserve_service_price": false, "true_up_charge_types": [], "agreement_period": 1 }, "custom_field_values": [], "addresses": [], "consume_prepaid_balance": false, "order_item_prices": [ { "order_item_price_type": "recurring", "id": "2703710", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "price_override": true, "amount": 111, "taxable_amount": 0, "product_price": { "product_price_type": "recurring", "id": "42618", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2017-01-01T00:00:00-06:00", "price_override": true, "price_ranges": [ { "price_range_type": "product", "id": "46468", "price": 111, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [] }, "price_ranges": [ { "price_range_type": "order-item", "id": "786408", "price": 111, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "price_group": null, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true } ], "service": { "id": "2191008" }, "order_item_counters": [], "charges": [ { "order_item_charge_type": "product-recurring", "id": "3957930", "amount": 111, "price_category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "overridden": false } ] }, { "order_item_type": "product", "id": "2688368", "quantity": 1, "sequence": 2, "product": { "product_type": "customer-subscription", "id": "28474", "name": "0035_sub" }, "order_items": [], "status": "COMPLETED", "extended_price": 100, "awaiting_approval": false, "price_list": { "id": "696", "name": "Default Price List" }, "service_resources": [], "requested_effective_date": "2019-07-15T05:11:48-05:00", "operation_run_attributes": [], "custom_field_values": [], "addresses": [], "consume_prepaid_balance": false, "order_item_prices": [ { "order_item_price_type": "recurring", "id": "2703712", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "price_override": true, "amount": 100, "taxable_amount": 0, "product_price": { "product_price_type": "recurring", "id": "47808", "tapered": false, "currency_code": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2018-01-01T00:00:00-06:00", "price_override": true, "price_ranges": [ { "price_range_type": "product", "id": "51926", "price": 100, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [] }, "price_ranges": [ { "price_range_type": "order-item", "id": "786410", "price": 100, "level": 1, "quantity_begin_range": 0, "currency_code": "USD" } ], "price_group": null, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true } ], "service": { "id": "2191010" }, "order_item_counters": [], "charges": [ { "order_item_charge_type": "product-recurring", "id": "3957932", "amount": 100, "price_category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "overridden": false } ] } ], "billingAccount": { "id": "1498624", "accountNum": "Dpref2439", "external_account_num": "0017F00001rG9NcQAK" }, "email_receipt": false, "order_date": "2019-07-15T05:11:48-05:00", "total_amount": 211, "custom_field_values": [], "status": "COMPLETED", "sub_total": 211, "tax_total": 0, "due_now_total": 0, "due_now_tax_total": 0 }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIOrder) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIOrder.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Order Items for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryOrderItems() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "order_item_type": "product", "id": "2679616", "quantity": 1.00000, "sequence": 1, "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "order_items": [], "description": "Tst1234", "status": "COMPLETED", "extended_price": 111.00000, "awaiting_approval": false, "priceList": { "id": "696", "name": "Default Price List" }, "serviceResources": [ { "resource_type": "service", "id": "51658", "description": null, "category": { "id": "1266", "name": "Default" }, "status": "ACTIVE", "identifier": "Test123456" } ], "requestedEffectiveDate": "2019-06-19T06:39:22-05:00", "operation_run_attributes": [], "orderItemAgreement": { "agreement": { "id": "4116", "name": "810 1350 1 month renewal" }, "endDate": "2019-07-19T00:00:00-05:00", "endAction": "RENEW_AGREEMENT", "preserveServicePrice": true, "next_preserve_service_price": false, "true_up_charge_types": [], "agreement_period": 1 }, "custom_field_values": [], "addresses": [], "consume_prepaid_balance": false, "orderItemPrices": [ { "orderItemPriceType": "recurring", "id": "2694818", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "price_override": true, "amount": 111.00, "taxable_amount": 0.00, "productPrice": { "orderItemPriceType": "recurring", "id": "42618", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2017-01-01T00:00:00-06:00", "price_override": true, "orderItemPriceRanges": [ { "price_range_type": "product", "id": "46468", "price": 111.00, "level": 1, "quantity_begin_range": 0.00, "currencyCode": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrenceperiod": "BILL_CYCLE", "prorated_on_order": false, "prorateOnCancel": false, "prorated_on_order_no_charge": false, "billInAdvance": true, "usage_rules": [ { "usage_rule_type": "product", "id": "8364", "name": "test2", "status": "ACTIVE", "allowance_amount": -1.00000, "allowance_uom": "MILLISECOND", "rule_order": 3, "prorated_on_order": false, "prorateOnCancel": false, "roll_over_type": "NONE", "allowance_type": "UNLIMITED", "valid_from": "2019-09-20T00:00:00-05:00", "valid_to": "2019-09-21T00:00:00-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usage_rate": { "rate_type": "flat", "id": "69572", "uom": "MILLISECOND", "rate": 1.00000, "valid_from": "2019-09-20T00:00:00-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "6204", "name": "UI test" } } }, { "usage_rule_type": "product", "id": "8368", "name": "test 03", "status": "ACTIVE", "allowance_amount": -1.00000, "allowance_uom": "DAY", "rule_order": 1, "prorated_on_order": false, "prorateOnCancel": false, "roll_over_type": "NONE", "allowance_type": "UNLIMITED", "valid_from": "2019-09-20T00:00:00-05:00", "valid_to": "2019-09-21T00:00:00-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "formula", "id": "76016", "operator": "GREATER_THAN_EQUALS", "field_name": "TEXT01", "field_value": "1" }, "usage_rate": { "rate_type": "pass-through", "id": "69586", "uom": "EVENT", "valid_from": "2019-09-20T00:00:00-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "6204", "name": "UI test" }, "usage_field_name": "NUMBER01" } }, { "usage_rule_type": "product", "id": "8370", "name": "test 03 (please not use it) active", "status": "ACTIVE", "allowance_amount": -1.00000, "allowance_uom": "GIGAWATTS_PER_HOUR", "rule_order": 2, "prorated_on_order": false, "prorateOnCancel": false, "roll_over_type": "NONE", "allowance_type": "UNLIMITED", "valid_from": "2019-09-20T00:00:00-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usage_rate": { "rate_type": "flat", "id": "69594", "uom": "GIGAWATTS_PER_HOUR", "rate": 1.00000, "valid_from": "2019-09-20T00:00:00-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "6204", "name": "UI test" } } }, { "usage_rule_type": "product", "id": "8372", "name": "test 03 (please do not use it) draft", "status": "DRAFT", "allowance_amount": 90.00000, "allowance_uom": "BYTE", "rule_order": 4, "prorated_on_order": true, "prorateOnCancel": true, "roll_over_type": "UNCAPPED", "allowance_type": "RECURRING", "valid_from": "2019-09-20T00:00:00-05:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "formula", "id": "76028", "operator": "LESS_THAN_EQUALS", "field_name": "NUMBER04", "field_value": "100" }, "usage_rate": { "rate_type": "pass-through", "id": "69596", "uom": "EVENT", "valid_from": "2019-09-20T00:00:00-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "6204", "name": "UI test" }, "usage_field_name": "NUMBER03" } } ] }, "orderItemPriceRanges": [ { "price_range_type": "order-item", "id": "776842", "price": 111.00, "level": 1, "quantity_begin_range": 0.00, "currencyCode": "USD" } ], "price_group": null, "prorated_on_order": false, "prorateOnCancel": false, "prorated_on_order_no_charge": false, "billInAdvance": true } ], "service": { "id": "2190204" }, "order_item_counters": [], "charges": [ { "order_item_charge_type": "product-recurring", "id": "3946966", "amount": 111.00, "tax_inclusive": false, "details": [], "price_category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "overridden": false } ] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIOrderItem>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIOrderItem>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Service for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryService() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "id":"2080918", "amount":100, "status":"DEACTIVATED", "product":{ "product_type":"customer-subscription", "id":"35299", "name":"Subproduct 5/15" }, "description":"Subproduct 5/15", "quantity":1, "startDate":"2016-06-01T00:00:00-05:00", "endDate":"2019-03-20T00:00:00-05:00", "status_reason":{ "reason_type":"service-deactivation", "id":"1748", "name":"Default Service Deactivation Reason", "description":"Default Service Deactivation Reason Description", "status":"ACTIVE" }, "billing_account":{ "id":"1413200", "account_num":"11", "external_account_num":null }, "status_date":"2019-03-20T00:00:00-05:00", "service_resources":[ ], "service_prices":[ { "price_type":"service", "id":"2329216", "tapered":false, "currency_code":"USD", "category":{ "charge_category_type":"price", "id":"2884", "name":"Default" }, "amount":100, "startDate":"2016-06-01T00:00:00-05:00", "bill_in_advance":true, "service_price_ranges":[ { "price_range_type":"service", "id":"2336128", "price":100, "quantity_begin_range":0, "currency_code":"USD" } ], "recurrence_period":"BILL_CYCLE", "product_price":{ "product_price_type":"recurring", "id":"18536" }, "estimated_invoice_amount":100, "invoice_quantity":1, "prorate_on_cancel":false } ], "renewal_count":0, "custom_field_values":[ ], "addresses":[ { "address_type":"postal", "id":"2894676", "purpose":"SERVICE", "country":"USA", "city":"NY", "line1":"123 Congress Avenue A", "line2":"Suite 100", "region_or_state":"NY", "postal_code":"10001" } ], "consume_prepaid_balance":false, "usage_rules":[ ] }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIService) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIService.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Discount Code Services for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryDiscountCodeServices() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "discount_code_type": "service", "id": "45158", "amount": 10.00, "discountCode": { "id": "1412", "name": "0044" }, "discountResource": { "resource_type": "discount", "id": "51560", "description": null, "category": { "id": "1384", "name": "Discount code category" }, "status": "ACTIVE", "identifier": "0044", "unlimited": true, "uses": 3 }, "validFrom": "2019-09-24T03:12:36-05:00", "validTo": "2028-01-01T00:00:00-06:00", "duration": 100, "service": { "id": "2299672" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDiscountCodeService>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDiscountCodeService>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Discounts for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryDiscounts() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "id": "830", "name": "Discount", "status": "ACTIVE", "discountType": "FLAT", "amount": 51.00, "currencyCode": "USD", "percentage": 0.19000, "duration": 3, "one_time": true, "recurring": true, "discountCategory": { "id": "212", "name": "Discount category_1" }, "amount_override": false, "duration_override": false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDiscount>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDiscount>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Invoice Items for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryInvoiceItems() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "invoice_item_type": "service", "id": "9164900", "quantity": 1.00000, "taxable": false, "service": { "id": "2086326" }, "unit_amount": 10.00, "total_amount": 10.00, "prorated_percentage": 100.00000, "charges": [ { "invoice_item_charge_type": "charge", "id": "10512314", "amount": 10.00, "balance": 10.00, "paid": false, "details": [], "un_prorated_amount": 10.00000, "price_category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "recurring_charge": true, "bill_in_advance": true, "description": "Default", "exclude_from_taxation": false, "quantity": 1.00000, "tax_inclusive": false } ], "start_date": "2017-03-01T00:00:00-06:00", "end_date": "2017-04-01T00:00:00-05:00" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIInvoiceItem>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIInvoiceItem>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Agreement Relations for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductAgreementRelations() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "4508", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "4014", "name": "fwqqffqww" } }, { "id": "4538", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "3524", "name": "DSU AGR" } }, { "id": "4542", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "4316", "name": "Agreement 1!" } }, { "id": "4544", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "3750", "name": "SZH 2702" } }, { "id": "4546", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "3992", "name": "Deactivate N" } }, { "id": "4548", "product": { "product_type": "customer-subscription", "id": "24128", "name": "000-111-222-333" }, "agreement": { "id": "3528", "name": "Service Deactivation" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductAgreementRelation>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductAgreementRelation>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Price Groups for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductPriceGroups() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "1770", "name": "Price Group 279", "description": "Description for Price Group 279", "code": "PG-001", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "1772", "name": "Price Group 279-2", "code": "PG-002", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "1816", "name": "PG", "code": "111", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "1870", "name": "SZH Price Group 1", "description": "The Price group for checking defects according 279 story", "code": "PG01", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "1876", "name": "SZH SZH", "code": "PG02", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "1882", "name": "SZH 705", "code": "PG705", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "2248", "name": "kbory", "code": "k123", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "2298", "name": "SZH", "code": "PG222", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "2818", "name": "svtPriceGroup", "code": "svt1", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "2968", "name": "DSU-001", "description": "test", "code": "DSU-001", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "2978", "name": "DSU-002", "description": "Non-global", "code": "DSU-002", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "3016", "name": "MGPG - SpotPak", "code": "MGPGSpot", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3184", "name": "SZH 3108-1", "code": "PG111", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3192", "name": "ak - Product Price", "code": "ak-123", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "3198", "name": "AM test", "code": "123", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "3200", "name": "AM test 2", "code": "1234", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3204", "name": "AM TEST 3", "description": "Description", "code": "235", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3208", "name": "AM TEST 4", "code": "2323", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3262", "name": "924 1805 ppg", "code": "TaxCode", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3324", "name": "PriceGroupGlobal20181016131557733", "code": "PRICE_GROUP_GLOBAL_20181016131557733", "status": "DRAFT", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3398", "name": "1031 1613 ppg", "code": "1031", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3470", "name": "SZH PG 2311", "code": "SZH PG 2311", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3484", "name": "SZH PG 2311-2", "code": "PG2311-2", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "3758", "name": "180419_PG", "code": "180419", "status": "DRAFT", "pricing_strategy": "DAILY_PRORATION", "global": false }, { "id": "4142", "name": "AK", "code": "1121", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4216", "name": "Global PG", "code": "5663", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4222", "name": "Global PG 2", "code": "755", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4238", "name": "PG 3", "code": "644", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4262", "name": "SZH PG", "code": "PG-Usage", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4278", "name": "akrut", "code": "akrut PG", "status": "DRAFT", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4326", "name": "NEW", "code": "5445", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4332", "name": "NEW 2", "code": "7444", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4350", "name": "PG A", "code": "547", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4356", "name": "PG B", "code": "6440", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4382", "name": "szh test counter", "code": "SZH Counter", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": true }, { "id": "4400", "name": "4444", "code": "4444", "status": "ACTIVE", "pricing_strategy": "DAILY_PRORATION", "global": false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductPriceGroup>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductPriceGroup>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Categories for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductCategories() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "900", "name": "Default", "description": "Default Product Category", "status": "ACTIVE" }, { "id": "1022", "name": "Test01 Solomiia Product Category", "status": "ACTIVE" }, { "id": "1060", "name": "DSU Charge Category", "status": "ACTIVE" }, { "id": "1110", "name": "Test02 SZH Product Cat. (Prepaid)", "status": "ACTIVE" }, { "id": "1120", "name": "Test2", "description": "kbory", "status": "SUSPENDED" }, { "id": "1124", "name": "Test3", "description": "kbory", "status": "SUSPENDED" }, { "id": "1126", "name": "test4", "status": "ACTIVE" }, { "id": "1128", "name": "!@#$%^&*()_", "status": "ACTIVE" }, { "id": "1132", "name": "Test1", "description": "kbory", "status": "SUSPENDED" }, { "id": "1136", "name": "Test6", "description": "kbory", "status": "ACTIVE" }, { "id": "1390", "name": "regression_dsu", "description": "regression", "status": "ACTIVE" }, { "id": "1392", "name": "regression_dsu_2", "description": "regression", "status": "SUSPENDED" }, { "id": "1404", "name": "OK test product category", "description": "sample description of the product category", "status": "ACTIVE" }, { "id": "1406", "name": "Product Catalog", "description": "additional information", "status": "ACTIVE" }, { "id": "1434", "name": "AK Product Category", "status": "ACTIVE" }, { "id": "1442", "name": "Product Category #1", "description": "additional information", "status": "ACTIVE" }, { "id": "1444", "name": "Product Category #3", "description": "additional information", "status": "ACTIVE" }, { "id": "1486", "name": "Sample Product Category #1", "status": "ACTIVE" }, { "id": "1494", "name": "dffd", "description": "ffefe", "status": "ACTIVE" }, { "id": "1498", "name": "Testing3", "description": "Adding a product", "status": "ACTIVE" }, { "id": "1508", "name": "tested", "description": "tested", "status": "ACTIVE" }, { "id": "1510", "name": "test41", "description": "", "status": "ACTIVE" }, { "id": "1512", "name": "OK test product category1", "description": "sample description of the product category", "status": "ACTIVE" }, { "id": "1514", "name": "Testing31", "description": "Adding a product", "status": "ACTIVE" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductCategory>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductCategory>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Tags for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductTags() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "374", "name": "SZH Prepaid", "priority": 5 }, { "id": "376", "name": "kbory", "description": "test1", "priority": 17 }, { "id": "406", "name": "1", "description": "descr", "priority": 2 }, { "id": "408", "name": "2", "description": "descr2", "priority": 1 }, { "id": "410", "name": "66", "priority": 1 }, { "id": "412", "name": "38", "priority": 1 }, { "id": "446", "name": "kbory123", "description": "My test tag", "priority": 0 }, { "id": "448", "name": "Test-nameSVT", "description": "My test tag", "priority": 1111 }, { "id": "450", "name": "Product Tag 4271122", "description": "Product Tag 4272", "priority": 13 }, { "id": "452", "name": "123_TEST", "description": "My test tag_UPDATED", "priority": 14 }, { "id": "476", "name": "OK product tag 1", "description": "string", "priority": 3 }, { "id": "478", "name": "OK product tag 3", "description": "string", "priority": 10 }, { "id": "480", "name": "OK product tag 4", "description": "string", "priority": 50 }, { "id": "482", "name": "OK new name", "description": "new description", "priority": 51 }, { "id": "484", "name": "Product Tag 1", "description": "additional information on product tag", "priority": 7 }, { "id": "498", "name": "AKqeqweqweqwe", "priority": 1113 }, { "id": "502", "name": "akrut", "priority": 1114 }, { "id": "510", "name": "ProductsE", "priority": 1115 }, { "id": "522", "name": "check234", "description": "12345", "priority": 56 }, { "id": "524", "name": "1-pp", "description": "very useful", "priority": 1112 }, { "id": "528", "name": "migration", "priority": 1116 }, { "id": "530", "name": "test12345", "description": "Tested Completed", "priority": 101 }, { "id": "532", "name": "test098", "description": "Tested Completed", "priority": 129 }, { "id": "534", "name": "Test2345", "description": "this for test only", "priority": 2345 }, { "id": "536", "name": "check23774", "description": "12345", "priority": 53 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductTag>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductTag>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Register Types for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductRegisterTypes() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "428", "name": "1", "code": "1", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "432", "name": "Test05 Register Type (Money)", "code": "T05-RegType", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": false }, { "id": "520", "name": "827 1840 reg", "code": "827mi", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": true }, { "id": "530", "name": "ak #1", "code": "123qwe", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "532", "name": "ak #21", "code": "123asd", "status": "DEACTIVATED", "uom": "COUNT", "enforce_balance": false }, { "id": "558", "name": "New type 1 test!", "description": "Free text description!", "code": "123qwerT", "status": "DRAFT", "uom": "MONEY", "enforce_balance": true }, { "id": "562", "name": "asdf qwerty asdfg qwerty asdf qwerty asd", "code": "1234", "status": "DRAFT", "uom": "COUNT", "enforce_balance": false }, { "id": "568", "name": "Amyrgor POST 1", "description": "Test description", "code": "qwerty1234", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "572", "name": "A", "code": "B", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "574", "name": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "code": "dfbgdf", "status": "DRAFT", "uom": "COUNT", "enforce_balance": false }, { "id": "578", "name": "value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols value with 255 symbols va", "code": "BBB", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "582", "name": "Amyrgor POST 2", "description": "Test description", "code": "qwerty12345", "status": "DRAFT", "uom": "MONEY", "enforce_balance": true }, { "id": "584", "name": "Register Type#11gtyur568ue568ew6741", "description": "updated Description for Register Type#1", "code": "Code for Type#1", "status": "DRAFT", "uom": "COUNT", "enforce_balance": false }, { "id": "586", "name": "Register Type#2", "description": "Description for Register Type#2", "code": "Code for Type#2", "status": "DRAFT", "uom": "MONEY", "enforce_balance": true }, { "id": "588", "name": "UPDATED Register Type#3", "code": "Code for Type#3", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "590", "name": "UPD Register Type#4", "description": "UPDT Description for Register Type#4", "code": "Code for Type#4", "status": "DEACTIVATED", "uom": "MONEY", "enforce_balance": true }, { "id": "592", "name": "RT#1", "code": "101", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "594", "name": "RT#2", "code": "102", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "596", "name": "RT#3", "code": "103", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": true }, { "id": "598", "name": "Amyrgor POST 3", "description": "Test description", "code": "qwerty12", "status": "DRAFT", "uom": "COUNT", "enforce_balance": false }, { "id": "600", "name": "Reg Type#1", "description": "Reg Type#1", "code": "Code#1", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "602", "name": "Reg Type#2", "description": "Reg Type#2", "code": "Code#2", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": false }, { "id": "604", "name": "Reg Type#3", "description": "Reg Type#3", "code": "Code#3", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "606", "name": "Reg Type#4", "description": "Reg Type#4", "code": "Code#4", "status": "DEACTIVATED", "uom": "COUNT", "enforce_balance": false }, { "id": "608", "name": "Reg Type#5", "description": "Reg Type#5", "code": "Code#5", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": false }, { "id": "610", "name": "Reg Type#6", "description": "Reg Type#6", "code": "Code#6", "status": "DEACTIVATED", "uom": "MONEY", "enforce_balance": false }, { "id": "612", "name": "For Service 1", "description": "Test description", "code": "11101", "status": "ACTIVE", "uom": "COUNT", "enforce_balance": true }, { "id": "614", "name": "For Service 2", "description": "Test description", "code": "11102", "status": "DEACTIVATED", "uom": "COUNT", "enforce_balance": true }, { "id": "630", "name": "value 25", "description": "Like any othe", "code": "```", "status": "DRAFT", "uom": "MONEY", "enforce_balance": false }, { "id": "632", "name": "value 24", "description": "Like any othe", "code": "```1", "status": "DRAFT", "uom": "MONEY", "enforce_balance": false }, { "id": "634", "name": "<some value>", "description": "<some value>", "code": "123456", "status": "DEACTIVATED", "uom": "COUNT", "enforce_balance": false }, { "id": "636", "name": " tested", "description": "tested", "code": "2323", "status": "DRAFT", "uom": "COUNT", "enforce_balance": true }, { "id": "638", "name": "Test123", "description": "Testing", "code": "T05-RegType121", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": false }, { "id": "640", "name": "Test1234", "description": "Testing", "code": "T05-RegType1212", "status": "ACTIVE", "uom": "MONEY", "enforce_balance": true }, { "id": "642", "name": "Amyrgor POST 31", "description": "Test description", "code": "qwerty121", "status": "DRAFT", "uom": "COUNT", "enforce_balance": false } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductRegisterType>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductRegisterType>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Price for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper createProductPrice() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '{ "product_price_type": "recurring", "id": "18536", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "validFrom": "2016-05-15T00:00:00-05:00", "valid_to": "2019-11-15T17:00:00-06:00", "price_override": true, "price_ranges": [ { "price_range_type": "product", "id": "20668", "price": 100, "level": 1, "quantity_begin_range": 0.00, "currency_code": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "recurrence_amount": 120.00000, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [ { "usage_rule_type": "product", "id": "8392", "name": "Test Rule", "status": "ACTIVE", "allowance_amount": -1.00000, "allowance_uom": "KILOBYTE", "rule_order": 1, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "NONE", "allowance_type": "UNLIMITED", "valid_from": "2017-04-01T00:00:00-05:00", "valid_to": "2019-11-30T00:00:00-06:00", "rule_type": "TAPERED", "spec": { "usage_rule_specification_type": "match-all" }, "usage_rate": { "rate_type": "flat", "id": "69774", "uom": "KILOBYTE", "rate": 10.00000000000000000000, "valid_from": "2017-04-01T00:00:00-05:00", "charge_category": { "charge_category_type": "usage-charge", "id": "5938", "name": "0082" } } } ] }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIProductPrice) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIProductPrice.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Market Places for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryMarketPlaces() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "622", "name": "Default Marketplace", "valid_from": "2017-05-15T00:00:00-05:00" }, { "id": "698", "name": "CPQ Marketplace", "valid_from": "2017-12-13T00:00:00-06:00" }, { "id": "770", "name": "Test Marketplace UPD", "description": "Marketplace for Test UPDATED", "valid_from": "2018-04-23T00:00:00-05:00" }, { "id": "810", "name": "830 1604 Marketplaces", "valid_from": "2018-08-30T00:00:00-05:00" }, { "id": "826", "name": "amyrgor mk 1", "valid_from": "2018-11-16T00:00:00-06:00" }, { "id": "870", "name": "GTP-3279 Marketplace", "valid_from": "2019-05-28T00:00:00-05:00" }, { "id": "894", "name": "tested", "description": "tested", "valid_from": "2019-11-05T00:00:00-06:00" }, { "id": "896", "name": "Test1234567", "description": "testinggg", "valid_from": "2019-11-05T00:00:00-06:00" }, { "id": "898", "name": "ABCDE", "description": "done1234", "valid_from": "2019-11-05T00:00:00-06:00" }, { "id": "900", "name": "tested543", "description": "", "valid_from": "2019-11-05T00:00:00-06:00" }, { "id": "902", "name": "Default Marketplace12", "description": "ddfd", "valid_from": "2019-11-05T00:00:00-06:00" }, { "id": "912", "name": "test 11/12", "valid_from": "2019-12-11T00:00:00-06:00" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIMarketplace>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIMarketplace>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Custom Field Values for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductCustomFieldValues() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "custom_field_value_type": "product", "id": "182782", "value": "01/01/2017", "customField": { "custom_field_type": "product", "id": "1982", "name": "test 03" } }, { "custom_field_value_type": "product", "id": "182944", "value": "122222", "customField": { "custom_field_type": "product", "id": "1970", "name": "Test update" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductCustomFieldValue>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductCustomFieldValue>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Product Custom Fields for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper queryProductCustomFields() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "custom_field_type": "product", "id": "1970", "name": "Test update", "description": "test description", "enabled": true, "searchable": true, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "1974", "name": "test 2", "enabled": false, "searchable": false, "field_type": "LIST", "field_validation_type": "TEXT", "references": [ { "id": "1022", "status": "ACTIVE", "value": "t1" }, { "id": "1024", "status": "ACTIVE", "value": "t2" } ] }, { "custom_field_type": "product", "id": "1976", "name": "test 4", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "1982", "name": "test 03", "enabled": true, "searchable": false, "field_type": "LIST", "field_validation_type": "DATE", "references": [ { "id": "1026", "status": "ACTIVE", "value": "01/01/2017" }, { "id": "1028", "status": "ACTIVE", "value": "01/01/2018" }, { "id": "1030", "status": "SUSPENDED", "value": "01/01/2019" }, { "id": "1096", "status": "ACTIVE", "value": "01/30/2018" } ] }, { "custom_field_type": "product", "id": "1986", "name": "test 04", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "BOOLEAN", "references": [ { "id": "1032", "status": "ACTIVE", "value": "true" } ] }, { "custom_field_type": "product", "id": "1990", "name": "test 06", "enabled": true, "searchable": false, "field_type": "LIST", "field_validation_type": "CUSTOM", "references": [ { "id": "1036", "status": "ACTIVE", "value": "test" } ], "reg_ex": "test" }, { "custom_field_type": "product", "id": "2000", "name": "APIS-1868-product", "description": "APIS-1868-for-product", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2002", "name": "APIS-1868-product-2", "description": "APIS-1868", "enabled": true, "searchable": false, "field_type": "LIST", "field_validation_type": "BOOLEAN", "references": [ { "id": "1042", "status": "ACTIVE", "value": "true" }, { "id": "1178", "status": "ACTIVE", "value": "false" } ] }, { "custom_field_type": "product", "id": "2006", "name": "APIS-1868-product-3", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] }, { "custom_field_type": "product", "id": "2008", "name": "APIS-1868-product-4", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2042", "name": "test", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "DATE", "references": [ { "id": "1072", "status": "ACTIVE", "value": "3.14" } ] }, { "custom_field_type": "product", "id": "2058", "name": "test 1", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "DECIMAL", "references": [] }, { "custom_field_type": "product", "id": "2082", "name": "szh cf", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2330", "name": "sample product custom field #1", "description": "for API guide", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2416", "name": "NNproduct1", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2490", "name": "Reverse", "description": "test", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2492", "name": "straight", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2558", "name": "Test custom field 11", "enabled": false, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "TEXT", "references": [] }, { "custom_field_type": "product", "id": "2580", "name": "TC_PROD_CUST_FIELD", "enabled": true, "searchable": false, "field_type": "TEXT_FIELD", "field_validation_type": "INTEGER", "references": [] } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductCustomField>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductCustomField>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Referer Token for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getRefererToken() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '{ "token": "538a155a-c1e8-4765-b9be-7023236cf299" }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIGetPaymentRefererToken) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIGetPaymentRefererToken.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
  /**
   * @description: This method is used to get Dummy Token Token for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper getPaymentToken() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '{ "reference": "e4bc2c7a-47fb-4fb5-b8e8-519d9be2f115", "validation_status": "VALIDATION_NOT_REQUESTED" }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIGetPaymentMethodResponse) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIGetPaymentMethodResponse.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  /**
   * @description: This method is used to create Dummy Token Token for test cases
   * @return GTVAPIRestClient.ResponseWrapper,The instance of GTVAPIRestClient.ResponseWrapper class.
   */
  public static GTVAPIRestClient.ResponseWrapper createPayment() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '{ "id": "69768", "payment_method": { "payment_method_type": "credit-card", "id": "862512", "nickname": "Credit Card Ending 1111", "custom_field_values": [], "multi_factor_auth": false, "email_address": { "address_type": "email", "id": "3233960", "purpose": "PAYMENT", "email": "fziegler@gotransverse.com" }, "postal_address": { "address_type": "postal", "id": "3233962", "purpose": "PAYMENT", "country": "USA", "city": "Austin", "line1": "1 Main St.", "region_or_state": "TX", "postal_code": "33333" }, "card_type": "VISA", "first_name": "Friedrich", "last_name": "Ziegler", "identifier_number": "Last 4: 1111", "expiration_date": "12/2020", "last_four": "1111" }, "billing_account": { "id": "1417298", "account_num": "Dpref13", "external_account_num": null }, "valid_from": "2020-12-10T04:01:24-06:00", "auto_payment": true }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIGetPaymentMethodResponse) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIGetPaymentMethodResponse.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper createProducts() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '{ "product_type": "customer-subscription", "id": "12710", "name": "Subproduct 5/15", "description": "1", "serialized": true, "taxable": false, "trial": false, "state": "AVAILABLE", "requiresAgreement": false, "default_quantity": 1, "prices": [ { "product_price_type": "recurring", "id": "18536", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2016-05-15T00:00:00-05:00", "price_override": true, "priceRanges": [ { "price_range_type": "product", "id": "20668", "price": 100, "level": 1, "quantity_begin_range": 0, "currencyCode": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "recurrence_amount": 120, "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [] } ], "productCategory": { "id": "900", "name": "Default" }, "min_service_resources": 0, "max_service_resources": 0, "trial_override": false, "product_tags": [], "introduction_date": "2016-05-15T05:15:00-05:00", "custom_field_values": [], "rule_override": false, "rule_type": "TAPERED", "rule_mode": "ROOT", "consume_prepaid_balance": false }, { "product_type": "general", "id": "13028", "name": "SJTest", "description": "SJTest", "serialized": false, "taxable": false, "trial": false, "short_description": "SJTest", "state": "AVAILABLE", "requiresAgreement": false, "default_quantity": 1, "prices": [ { "product_price_type": "one-time", "id": "18798", "tapered": true, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2017-06-05T00:00:00-05:00", "price_override": true, "priceRanges": [ { "price_range_type": "product", "id": "20984", "price": 1, "level": 1, "quantity_begin_range": 0, "currencyCode": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "charge_during_renewal": false, "allow_scheduled_charges": false } ], "productCategory": { "id": "900", "name": "Default" }, "internal_name": "SJTest", "external_product_number": "SJTest", "trial_override": false, "product_tags": [], "introduction_date": "2017-06-05T11:43:00-05:00", "custom_field_values": [], "fund_prepaid_balance": false, "expiring_contribution": false }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIProduct) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIProduct.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper queryProductPrices() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "product_price_type": "recurring", "id": "49712", "tapered": false, "currencyCode": "USD", "category": { "charge_category_type": "price", "id": "2884", "name": "Default" }, "valid_from": "2019-11-15T17:00:00-06:00", "valid_to": "2019-11-15T17:00:00-06:00", "price_override": false, "price_ranges": [ { "price_range_type": "product", "id": "53890", "price": 100.00, "level": 1, "quantity_begin_range": 0.00, "currency_code": "USD" } ], "payment_on_purchase_required": false, "price_group": null, "recurring_payment_required": false, "recurrence_period": "BILL_CYCLE", "prorated_on_order": false, "prorated_on_cancel": false, "prorated_on_order_no_charge": false, "bill_in_advance": true, "usage_rules": [], "bill_in_advance_configuration": { "amount": 10, "period": "DAY" } } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductPrice>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductPrice>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper getbillingAccount() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '{ "id": "1496278", "account_num": "test_013", "externalAccountNum": null, "billtype": "EMAIL", "billCycle": { "bill_cycle_type": "monthly", "id": "9110", "status": "ACTIVE", "name": "BC test_01-1", "start_date": "2019-06-01T00:00:00-05:00", "end_date": "2019-07-01T00:00:00-05:00", "internal_render": true, "auto_bill": false, "currencyCode": "USD", "billingaccountcategory": { "id": "1208", "name": "ACtest_01" }, "current_bill_cycle_run": { "bill_run_type": "cycle", "id": "946562" }, "day_of_month": 1 }, "responsibleParty": { "party_type": "organization", "id": "1503154", "addresses": [ { "addressType": "email", "id": "3130974", "purpose": "PRIMARY", "email": "testmail@gmail.com" }, { "addressType": "postal", "id": "3130972", "purpose": "BILLING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "postal", "id": "3130970", "purpose": "SERVICE", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "postal", "id": "3130968", "purpose": "SHIPPING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" } ], "organizationName": "Test Account Salesforce", "tax_id_validated": false }, "recurring_payments": [], "billingaccountcategory": { "id": "1208", "status": "ACTIVE", "name": "ACtest_01", "payment_term": { "id": "1060", "name": "Immediate" }, "auto_pay_offset": 0, "preferred_language_code": null, "minimum_invoice_thresholds": [] }, "auto_payment_authorized": false, "status": "FINAL_BILL", "pending_charges_total": 0, "balance": 540, "start_date": "2019-05-13T05:31:51-05:00", "end_date": "2019-05-20T01:44:38-05:00", "custom_field_values": [ { "custom_field_value_type": "billing-account", "id": "171884", "value": "456", "custom_field": { "custom_field_type": "billing-account", "id": "2226", "name": "account custom list cf" } } ], "contacts": [ { "party_type": "person", "id": "1503238", "addresses": [ { "addressType": "postal", "id": "3131288", "purpose": "BILLING", "country": "USA", "city": "City", "line1": "ADD line1", "region_or_state": "NE", "postal_code": "11111" }, { "addressType": "email", "id": "3131290", "purpose": "PRIMARY", "email": "test@gmail.com" } ], "first_name": "FName" }, { "party_type": "person", "id": "1503284", "suffix": "Test", "company": "Test Company", "department": "Test Department", "title": "Test Title", "addresses": [ { "addressType": "postal", "id": "3131406", "purpose": "BILLING", "country": "USA", "city": "Austin", "line1": "Test Street", "region_or_state": "TX", "postal_code": "78701" }, { "addressType": "email", "id": "3131408", "purpose": "SECONDARY", "email": "Testmail2@gmail.com" }, { "addressType": "email", "id": "3131410", "purpose": "PRIMARY", "email": "Testmail@gmail.com" }, { "addressType": "telecom", "id": "3131412", "purpose": "MOBILE", "number": "464654465645", "extension": "4556", "country_code": "97", "area_code": "25" }, { "addressType": "telecom", "id": "3131414", "purpose": "FAX", "number": "132165465465", "extension": "56", "country_code": "95", "area_code": "23" }, { "addressType": "telecom", "id": "3131416", "purpose": "HOME", "number": "56444646466", "extension": "45", "country_code": "92", "area_code": "89" }, { "addressType": "telecom", "id": "3131418", "purpose": "OFFICE", "number": "74521464445", "extension": "45", "country_code": "91", "area_code": "21" } ], "first_name": "Test", "last_name": "By Aman", "middle_name": "Contact", "contact_category": { "id": "156", "name": "ContactC1" } } ], "payment_term": { "id": "1062", "name": "Net 30" }, "tax_exempt": true, "currencyCode": "USD", "next_invoice_date": "2017-03-01T00:00:00-06:00", "responsible_account": { "id": "1496278", "account_num": "test_013", "externalAccountNum": null }, "background_allocation": true, "preferred_language_code": "EN", "minimum_invoice_amount": null }';
    reswrap.returnObject = (RestAPI2Domain.GTVAPIBillingAccount) JSON.deserialize(
      response,
      RestAPI2Domain.GTVAPIBillingAccount.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper getPriceListProductRelation() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "id": "14920", "price_list": { "id": "696", "name": "Default Price List" }, "product": { "product_type": "customer-subscription", "id": "12710", "name": "Testers", "sku": "TestersSku", "external_product_number": "string" }, "valid_from": "2017-05-15T05:16:32-05:00" } ]';
    reswrap.returnObject = (list<RestAPI2Domain.GTVAPIPriceListProductRelation>) JSON.deserialize(
      response,
      list<RestAPI2Domain.GTVAPIPriceListProductRelation>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper queryProductChargeRules() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    String response = '[ { "usage_rule_type": "product", "id": "8392", "name": "Test Rule", "status": "ACTIVE", "allowanceAmount": -1.00000, "allowanceUom": "KILOBYTE", "rule_order": 1, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "NONE", "allowanceType": "UNLIMITED", "rule_type": "TAPERED", "spec": { "usageRuleSpecificationType": "match-all" }, "usageRate": { "rate_type": "flat", "id": "69774", "uom": "KILOBYTE", "rate": 10.00000000000000000000, "valid_from": "2017-04-01T00:00:00-05:00", "chargeCategory": { "chargeCategory_type": "usage-charge", "id": "5938", "name": "0082" } }, "valid_from": "2017-04-01T00:00:00-05:00", "valid_to": "2019-11-30T00:00:00-06:00" }, { "usage_rule_type": "product", "id": "10038", "name": "TestUsage", "status": "DRAFT", "allowanceAmount": 23.00000, "allowanceUom": "MILLISECOND", "rule_order": 1, "prorated_on_order": true, "prorated_on_cancel": true, "roll_over_type": "NONE", "allowanceType": "RECURRING", "recurrence_interval": 1, "rule_type": "TAPERED", "spec": { "usageRuleSpecificationType": "match-all" }, "usageRate": { "rate_type": "flat", "id": "114176", "uom": "MILLISECOND", "rate": 5.00000000000000000000, "valid_from": "2020-05-01T00:00:00-05:00", "chargeCategory": { "chargeCategory_type": "usage-charge", "id": "5944", "name": "0073_Usage Charge Cat" } }, "valid_from": "2020-05-01T00:00:00-05:00" }, { "usage_rule_type": "product", "id": "10040", "name": "ACR2", "status": "ACTIVE", "allowanceAmount": 23.00000, "allowanceUom": "MILLISECOND", "rule_order": 1, "prorated_on_order": true, "prorated_on_cancel": true, "roll_over_type": "NONE", "allowanceType": "RECURRING", "recurrence_interval": 1, "rule_type": "TAPERED", "spec": { "usageRuleSpecificationType": "match-all" }, "usageRate": { "rate_type": "flat", "id": "114178", "uom": "MILLISECOND", "rate": 5.00000000000000000000, "valid_from": "2020-04-30T08:54:35-05:00", "chargeCategory": { "chargeCategory_type": "usage-charge", "id": "3182", "name": "def charge cat" } }, "valid_from": "2020-04-30T08:54:35-05:00", "valid_to": "2020-06-30T08:54:35-05:00" }, { "usage_rule_type": "product", "id": "10096", "name": "test1", "status": "ACTIVE", "allowanceAmount": 3.00000, "allowanceUom": "MILLISECOND", "rule_order": 3, "prorated_on_order": false, "prorated_on_cancel": false, "roll_over_type": "NONE", "allowanceType": "ONE_TIME", "rule_type": "TAPERED", "spec": { "usageRuleSpecificationType": "match-all" }, "usageRate": { "rate_type": "flat", "id": "116656", "uom": "MILLISECOND", "rate": 23.00000000000000000000, "valid_from": "2020-06-02T00:00:00-05:00", "chargeCategory": { "chargeCategory_type": "usage-charge", "id": "5938", "name": "0082" } }, "valid_from": "2020-06-02T00:00:00-05:00" } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIProductUsageRule>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIProductUsageRule>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }

  public static GTVAPIRestClient.ResponseWrapper queryDiscountResources() {
    GTVAPIRestClient.ResponseWrapper reswrap = new GTVAPIRestClient.ResponseWrapper();
    string response = '[ { "resource_type": "discount", "id": "56738", "description": null, "category": { "resource_category_type": "discount", "id": "1384", "name": "Discount code category" }, "status": "ACTIVE", "identifier": "0034", "unlimited": true, "uses": 7 } ]';
    reswrap.returnObject = (List<RestAPI2Domain.GTVAPIDiscountResource>) JSON.deserialize(
      response,
      List<RestAPI2Domain.GTVAPIDiscountResource>.class
    );
    reswrap.totalPages = '1';
    return reswrap;
  }
}