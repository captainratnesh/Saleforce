/**
 * Unpublished Work. Copyright 2009-2018 Transverse, LLC. All Rights Reserved.
 * This software contains confidential and trade secret information of:
 * Transverse, LLC.
 * 620 Congress Ave.
 * Suite 200
 * Austin, TX 78701
 * USA
 * Use, duplication or disclosure of this software is prohibited
 * without prior written permission of Transverse, LLC.
 */

/**
 * This class contains methods that return the mapping of StateVsStateCode and mapOfCountryVsCountryCode.
 * @author Aman Jain
 */

public class CountryAndStateISOCode {
  /**
   * Return state code ralated to state
   * @param state a string of state name (required)
   * @return the state code
   */
  public static String getStateCode(String state) {
    Map<String, String> mapOfStateVsStateCode = new Map<String, String>{
      'MORELOS' => 'MR',
      'NAYARIT' => 'NA',
      'NUEVO LEON' => 'NL',
      'OAXACA' => 'OA',
      'PUEBLA' => 'PU',
      'QUERETARO' => 'QE',
      'QUINTANA ROO' => 'QR',
      'SAN LUIS POTOSI' => 'SL',
      'SINALOA' => 'SI',
      'SONORA' => 'SO',
      'TABASCO' => 'TB',
      'TAMAULIPAS' => 'TM',
      'TLAXCALA' => 'TL',
      'VERACRUZ' => 'VE',
      'YUCATAN' => 'YU',
      'ZACATECAS' => 'ZA',
      'ALBERTA' => 'AB',
      'BRITISH COLUMBIA' => 'BC',
      'NEW BRUNSWICK' => 'NB',
      'NEWFOUNDLAND AND LABRADOR' => 'NL',
      'NORTHWEST TERRITORIES' => 'NT',
      'NOVA SCOTIA' => 'NS',
      'NUNAVUT' => 'NU',
      'ONTARIO' => 'ON',
      'PRINCE EDWARD ISLAND' => 'PE',
      'QUEBEC' => 'QC',
      'SASKATCHEWAN' => 'SK',
      'YUKON' => 'YT',
      'MICHIGAN' => 'MI',
      'MINNESOTA' => 'MN',
      'MISSISSIPPI' => 'MS',
      'MISSOURI' => 'MO',
      'MONTANA' => 'MT',
      'NEBRASKA' => 'NE',
      'NEVADA' => 'NV',
      'MASSACHUSETTS' => 'MA',
      'NEW HAMPSHIRE' => 'NH',
      'NEW JERSEY' => 'NJ',
      'NEW YORK' => 'NY',
      'NORTH CAROLINA' => 'NC',
      'NORTH DAKOTA' => 'ND',
      'OHIO' => 'OH',
      'OKLAHOMA' => 'OK',
      'OREGON' => 'OR',
      'NEW MEXICO' => 'NM',
      'PENNSYLVANIA' => 'PA',
      'PUERTO RICO' => 'PR',
      'GUERRERO' => 'GR',
      'HIDALGO' => 'HII',
      'JALISCO' => 'JA',
      'MEXICO' => 'MX',
      'MICHOACAN' => 'MC',
      'RHODE ISLAND' => 'RI',
      'SOUTH CAROLINA' => 'SC',
      'SOUTH DAKOTA' => 'SD',
      'TENNESSEE' => 'TN',
      'TEXAS' => 'TX',
      'UTAH' => 'UT',
      'VERMONT' => 'VT',
      'VIRGINIA' => 'VA',
      'WASHINGTON' => 'WA',
      'WEST VIRGINIA' => 'WV',
      'WYOMING' => 'WY',
      'AGUASCALIENTES' => 'AG',
      'BAJA CALIFORNIA' => 'BN',
      'BAJA CALIFORNIA SUR' => 'BS',
      'CAMPECHE' => 'CM',
      'CHIAPAS' => 'CP',
      'CHIHUAHUA' => 'CH',
      'WISCONSIN' => 'WI',
      'COAHUILA' => 'CAA',
      'COLIMA' => 'CL',
      'DISTRITO FEDERAL' => 'DF',
      'DURANGO' => 'DU',
      'GUANAJUATO' => 'GJ',
      'ALABAMA' => 'AL',
      'ALASKA' => 'AK',
      'ARIZONA' => 'AZ',
      'ARKANSAS' => 'AR',
      'ARMED FORCES AMERICA' => 'AA',
      'ARMED FORCES PACIFIC' => 'AP',
      'CALIFORNIA' => 'CA',
      'CONNECTICUT' => 'CT',
      'DISTRICT OF COLUMBIA' => 'DC',
      'DELAWARE' => 'DE',
      'FLORIDA' => 'FL',
      'GEORGIA' => 'GA',
      'HAWAII' => 'HI',
      'IDAHO' => 'ID',
      'ILLINOIS' => 'IL',
      'IOWA' => 'IA',
      'INDIANA' => 'IN',
      'KANSAS' => 'KS',
      'KENTUCKY' => 'KY',
      'LOUISIANA' => 'LA',
      'MAINE' => 'ME',
      'MANITOBA' => 'MB',
      'MARYLAND' => 'MD'
    };

    return mapOfStateVsStateCode.get(state);
  }
  /**
   * Return country ralated to country
   * @param country a string of country name (required)
   * @return the country code
   */
  public static String getCountryCode(String country) {
    Map<String, String> mapOfCountryVsCountryCode = new Map<String, String>{
      'DOMINICA' => 'DMA',
      'DOMINICAN REPUBLIC' => 'DOM',
      'ECUADOR' => 'ECU',
      'EGYPT' => 'EGY',
      'EL SALVADOR' => 'SLV',
      'EQUATORIAL GUINEA' => 'GNQ',
      'ERITREA' => 'ERI',
      'ESTONIA' => 'EST',
      'ETHIOPIA' => 'ETH',
      'FALKLAND ISLANDS' => 'FLK',
      'FAROE ISLANDS' => 'FRO',
      'FIJI' => 'FJI',
      'FINLAND' => 'FIN',
      'FRANCE' => 'FRA',
      'FRENCH GUIANA' => 'GUF',
      'FRENCH POLYNESIA' => 'PYF',
      'FRENCH SOUTHERN TERRITORIES' => 'ATF',
      'GABON' => 'GAB',
      'GAMBIA' => 'GMB',
      'GEORGIA' => 'GEO',
      'GERMANY' => 'DEU',
      'GHANA' => 'GHA',
      'GIBRALTAR' => 'GIB',
      'GREECE' => 'GRC',
      'GREENLAND' => 'GRL',
      'GRENADA' => 'GRD',
      'GUADELOUPE' => 'GLP',
      'GUAM' => 'GUM',
      'GUATEMALA' => 'GTM',
      'GUERNSEY' => 'GGY',
      'GUINEA' => 'GIN',
      'GUINEA-BISSAU' => 'GNB',
      'GUYANA' => 'GUY',
      'HAITI' => 'HTI',
      'UNITED STATES' => 'USA',
      'AFGHANISTAN' => 'AFG',
      'ALAND ISLANDS' => 'ALA',
      'ALBANIA' => 'ALB',
      'ALGERIA' => 'DZA',
      'AMERICAN SAMOA' => 'ASM',
      'ANDORRA' => 'AND',
      'ANGOLA' => 'AGO',
      'ANGUILLA' => 'AIA',
      'ANTARCTICA' => 'ATA',
      'ANTIGUA AND BARBUDA' => 'ATG',
      'ARGENTINA' => 'ARG',
      'ARMENIA' => 'ARM',
      'ARUBA' => 'ABW',
      'AUSTRALIA' => 'AUS',
      'AUSTRIA' => 'AUT',
      'AZERBAIJAN' => 'AZE',
      'BAHAMAS' => 'BHS',
      'BAHRAIN' => 'BHR',
      'BANGLADESH' => 'BGD',
      'BARBADOS' => 'BRB',
      'BELARUS' => 'BLR',
      'BELGIUM' => 'BEL',
      'BELIZE' => 'BLZ',
      'BENIN' => 'BEN',
      'BERMUDA' => 'BMU',
      'BHUTAN' => 'BTN',
      'BOLIVIA' => 'BM',
      'BONAIRE SAINT EUSTATIUS AND SABA' => 'BES',
      'BOSNIA AND HERZEGOVINA' => 'BIH',
      'BOTSWANA' => 'BWA',
      'BOUVET ISLAND' => 'BVT',
      'BRAZIL' => 'BRA',
      'BRITISH INDIAN OCEAN TERRITORY' => 'IOT',
      'BRUNEI DARUSSALAM' => 'BRN',
      'BULGARIA' => 'BGR',
      'BURKINA FASO' => 'BFA',
      'BURUNDI' => 'BDI',
      'CAMBODIA' => 'KHM',
      'CAMEROON' => 'CMR',
      'CANADA' => 'CAN',
      'CAPE VERDE' => 'CPV',
      'CAYMAN ISLANDS' => 'CYM',
      'CENTRAL AFRICAN REPUBLIC' => 'CAF',
      'CHAD' => 'TCD',
      'CHILE' => 'CHL',
      'CHINA' => 'CHN',
      'CHRISTMAS ISLAND' => 'CXR',
      'COCOS ISLANDS' => 'CCK',
      'COLOMBIA' => 'COL',
      'COMOROS' => 'COM',
      'CONGO' => 'COG',
      'COOK ISLANDS' => 'COK',
      'COSTA RICA' => 'CRI',
      'COTE DIVOIRE' => 'CIV',
      'CROATIA' => 'HRV',
      'CUBA' => 'CUB',
      'CURACAO' => 'CUW',
      'CYPRUS' => 'CYP',
      'CZECH REPUBLIC' => 'CZE',
      'DENMARK' => 'DNK',
      'DJIBOUTI' => 'DJI',
      'LESOTHO' => 'LSO',
      'LIBERIA' => 'LBR',
      'LIBYAN ARAB JAMAHIRIYA' => 'LBY',
      'LIECHTENSTEIN' => 'LIE',
      'LITHUANIA' => 'LTU',
      'LUXEMBOURG' => 'LUX',
      'MACAO' => 'MAC',
      'MACEDONIA' => 'MKD',
      'MADAGASCAR' => 'MDG',
      'MALAWI' => 'MWI',
      'MALAYSIA' => 'MYS',
      'MALDIVES' => 'MDV',
      'MALI' => 'MLI',
      'MALTA' => 'MLT',
      'MARSHALL ISLANDS' => 'MHL',
      'MARTINIQUE' => 'MTQ',
      'MAURITANIA' => 'MRT',
      'MAURITIUS' => 'MUS',
      'MAYOTTE' => 'MYT',
      'MEXICO' => 'MEX',
      'MICRONESIA' => 'FSM',
      'MOLDOVA' => 'MDA',
      'MONACO' => 'MCO',
      'MONGOLIA' => 'MNG',
      'MONTENEGRO' => 'MNE',
      'MONTSERRAT' => 'MSR',
      'MOROCCO' => 'MAR',
      'MOZAMBIQUE' => 'MOZ',
      'MYANMAR' => 'MMR',
      'NAMIBIA' => 'NAM',
      'NEPAL' => 'NPL',
      'NETHERLANDS' => 'NLD',
      'NEW CALEDONIA' => 'NCL',
      'NEW ZEALAND' => 'NZL',
      'NICARAGUA' => 'NIC',
      'NIGER' => 'NER',
      'NIGERIA' => 'NGA',
      'NIUE' => 'NIU',
      'NORFOLK ISLAND' => 'NFK',
      'NORTHERN MARIANA ISLANDS' => 'MNP',
      'NORWAY' => 'NOR',
      'OMAN' => 'OMN',
      'PAKISTAN' => 'PAK',
      'PALAU' => 'PLW',
      'PALESTINIAN TERRITORY' => 'PSE',
      'PANAMA' => 'PAN',
      'PAPUA NEW GUINEA' => 'PNG',
      'PARAGUAY' => 'PRY',
      'PERU' => 'PER',
      'PHILIPPINES' => 'PHL',
      'POLAND' => 'POL',
      'PORTUGAL' => 'PRT',
      'PITCAIRN' => 'PCN',
      'PUERTO RICO' => 'PRI',
      'QATAR' => 'QAT',
      'REUNION' => 'REU',
      'ROMANIA' => 'ROU',
      'RUSSIAN FEDERATION' => 'RUS',
      'RWANDA' => 'RWA',
      'SAINT BARTHELEMY' => 'BLM',
      'SAINT HELENA' => 'SHN',
      'SAINT KITTS AND NEVIS' => 'KNA',
      'SAINT LUCIA' => 'LCA',
      'SAINT MARTIN' => 'MAF',
      'SAINT PIERRE AND MIQUELON' => 'SPM',
      'SAINT VINCENT AND THE GRENADINES' => 'VCT',
      'SAMOA' => 'WSM',
      'SAN MARINO' => 'SMR',
      'SAO TOME AND PRINCIPE' => 'STP',
      'SAUDI ARABIA' => 'SAU',
      'SENEGAL' => 'SEN',
      'SERBIA' => 'SRB',
      'SEYCHELLES' => 'SYC',
      'SIERRA LEONE' => 'SLE',
      'SINGAPORE' => 'SGP',
      'SINT MAARTEN' => 'SXM',
      'SLOVAKIA' => 'SVK',
      'SLOVENIA' => 'SVN',
      'SOLOMON ISLANDS' => 'SLB',
      'SOMALIA' => 'SOM',
      'SOUTH AFRICA' => 'ZAF',
      'SOUTH GEORGIA ISLANDS' => 'SGS',
      'SPAIN' => 'ESP',
      'SRI LANKA' => 'LKA',
      'SUDAN' => 'SDN',
      'SURINAME' => 'SUR',
      'SVALBARD AND JAN MAYEN' => 'SJM',
      'SWAZILAND' => 'SWZ',
      'SWEDEN' => 'SWE',
      'SWITZERLAND' => 'CHE',
      'SYRIAN ARAB REPUBLIC' => 'SYR',
      'TAIWAN' => 'TWN',
      'TAJIKISTAN' => 'TJK',
      'TANZANIA' => 'TZA',
      'THAILAND' => 'THA',
      'TIMOR-LESTE' => 'TLS',
      'TOGO' => 'TGO',
      'TOKELAU' => 'TKL',
      'TONGA' => 'TON',
      'TRINIDAD AND TOBAGO' => 'TTO',
      'TUNISIA' => 'TUN',
      'TURKEY' => 'TUR',
      'TURKMENISTAN' => 'TKM',
      'TURKS AND CAICOS ISLANDS' => 'TCA',
      'TUVALU' => 'TUV',
      'UGANDA' => 'UGA',
      'UKRAINE' => 'UKR',
      'UNITED ARAB EMIRATES' => 'ARE',
      'UNITED KINGDOM' => 'GBR',
      'URUGUAY' => 'URY',
      'US MINOR OUTLYING ISLANDS' => 'UMI',
      'UZBEKISTAN' => 'UZB',
      'VANUATU' => 'VUT',
      'VATICAN CITY STATE' => 'VAT',
      'VENEZUELA' => 'VEN',
      'VIET NAM' => 'VNM',
      'VIRGIN ISLANDS (BRITISH)' => 'VGB',
      'VIRGIN ISLANDS (U.S.)' => 'VIR',
      'WALLIS AND FUTUNA' => 'WLF',
      'WESTERN SAHARA' => 'ESH',
      'YEMEN' => 'YEM',
      'ZAMBIA' => 'ZMB',
      'ZIMBABWE' => 'ZWE',
      'HEARD AND MCDONALD ISLANDS' => 'HMD',
      'HONDURAS' => 'HND',
      'HONG KONG' => 'HKG',
      'HUNGARY' => 'HUN',
      'ICELAND' => 'ISL',
      'INDIA' => 'IND',
      'INDONESIA' => 'IDN',
      'IRAN' => 'IRN',
      'IRAQ' => 'IRQ',
      'IRELAND' => 'IRL',
      'ISLE OF MAN' => 'IMN',
      'ISRAEL' => 'ISR',
      'ITALY' => 'ITA',
      'JAMAICA' => 'JAM',
      'JAPAN' => 'JPN',
      'JERSEY' => 'JEY',
      'JORDAN' => 'JOR',
      'KAZAKHSTAN' => 'KAZ',
      'KENYA' => 'KEN',
      'KIRIBATI' => 'KIR',
      'KOREA' => 'KOR',
      'KUWAIT' => 'KWT',
      'KYRGYZSTAN' => 'KGZ',
      'LAO' => 'LAO',
      'LATVIA' => 'LVA',
      'LEBANON' => 'LBN'
    };
    return mapOfCountryVsCountryCode.get(country);
  }
  /**
   * Return Iso2Code ralated to country
   * @param country a string of country name (required)
   * @return Iso2Code code
   */
  public static String getCountryCodeISo2(String country) {
    Map<String, String> mapOfCountryVsIso2Code = new Map<String, String>{
      'AD' => 'AND',
      'AW' => 'BMU',
      'AF' => 'AFG',
      'AO' => 'AGO',
      'AI' => 'AIA',
      'AX' => 'ALA',
      'AL' => 'ALB',
      'AE' => 'ARE',
      'AR' => 'ARG',
      'AM' => 'ARM',
      'AS' => 'ASM',
      'AQ' => 'ATA',
      'TF' => 'ATF',
      'AG' => 'ATG',
      'AU' => 'AUS',
      'AT' => 'AUT',
      'AZ' => 'AZE ',
      'BI' => 'BDI',
      'BE' => 'BEL',
      'BJ' => 'BEN',
      'BF' => 'BFA',
      'BD' => 'BGD',
      'BG' => 'BGR',
      'BH' => 'BHR',
      'BS' => 'BHS',
      'BA' => 'BIH',
      'BL' => 'BLM',
      'BY' => 'BLR',
      'BZ' => 'BLZ',
      'NULL' => 'BM',
      'BR' => 'BRA',
      'BB' => 'BRB',
      'BN' => 'BRN',
      'BT' => 'BTN',
      'BV' => 'BVT',
      'BW' => 'BWA',
      'CF' => 'CAF',
      'CA' => 'CAN',
      'CC' => 'CCK',
      'CH' => 'CHE',
      'CL' => 'CHL',
      'CN' => 'CHN',
      'CI' => 'CIV',
      'CM' => 'CMR',
      'CD' => 'COD',
      'CG' => 'COG',
      'CK' => 'COK',
      'CO' => 'COL',
      'KM' => 'COM',
      'CV' => 'CPV',
      'CR' => 'CRI',
      'CU' => 'CUB',
      'CX' => 'CXR',
      'KY' => 'CAN',
      'CY' => 'CAN',
      'CZ' => 'CAN',
      'DE' => 'DEU',
      'DJ' => 'DJI',
      'DM' => 'DMA',
      'DK' => 'DNK',
      'DO' => 'DOM',
      'DZ' => 'DZA',
      'EC' => 'ECU',
      'EG' => 'EGY',
      'ER' => 'ERI',
      'EH' => 'ESH',
      'ES' => 'ESP',
      'EE' => 'EST',
      'ET' => 'ETH',
      'FI' => 'FIN',
      'FJ' => 'FJI',
      'FK' => 'FLK',
      'FR' => 'FRA',
      'FO' => 'FRO',
      'FM' => 'FSM',
      'GA' => 'GAB',
      'GB' => 'GBR',
      'GE' => 'GEO',
      'GG' => 'GGY',
      'GH' => 'GHA',
      'GI' => 'GIB',
      'GN' => 'GIN',
      'GP' => 'GLP',
      'GM' => 'GMB',
      'GW' => 'GNB',
      'GQ' => 'GNQ',
      'GR' => 'GRC',
      'GD' => 'GRD',
      'GL' => 'GRL',
      'GT' => 'GTM',
      'GF' => 'GUF',
      'GU' => 'GUM',
      'GY' => 'GUY',
      'HK' => 'HKG',
      'HM' => 'HMD',
      'HN' => 'HND',
      'HR' => 'HRV',
      'HT' => 'HTI',
      'MR' => 'MRT',
      'MS' => 'MSR',
      'MQ' => 'MTQ',
      'MU' => 'MUS',
      'MW' => 'MWI',
      'MY' => 'MYS',
      'YT' => 'MYT',
      'NA' => 'NAM',
      'NC' => 'NCL',
      'NE' => 'NER',
      'HU' => 'HUN',
      'ID' => 'IDN',
      'IM' => 'IMN',
      'IN' => 'IND',
      'IO' => 'IOT',
      'IE' => 'IRL',
      'IR' => 'IRN',
      'IQ' => 'IRQ',
      'IS' => 'ISL',
      'IL' => 'ISR',
      'NF' => 'NFK',
      'NG' => 'NGA',
      'NI' => 'NIC',
      'NU' => 'NIU',
      'NL' => 'NLD',
      'NO' => 'NOR',
      'NP' => 'NPL',
      'NR' => 'NRU',
      'NZ' => 'NZL',
      'OM' => 'OMN',
      'IT' => 'ITA',
      'JM' => 'JAM',
      'JE' => 'JEY',
      'JO' => 'JOR',
      'JP' => 'JPN',
      'KZ' => 'KAZ',
      'KE' => 'KEN',
      'KG' => 'KGZ',
      'KH' => 'KHM',
      'KI' => 'KIR',
      'PK' => 'PAK',
      'PA' => 'PAN',
      'PN' => 'PCN',
      'PE' => 'PER',
      'PH' => 'PHL',
      'PW' => 'PLW',
      'PG' => 'PNG',
      'PL' => 'POL',
      'PR' => 'PRI',
      'KP' => 'PRK',
      'SY' => 'SYR',
      'TC' => 'TCA',
      'TD' => 'TCD',
      'TG' => 'TGO',
      'TH' => 'THA',
      'TJ' => 'TJK',
      'TK' => 'TKL',
      'TM' => 'TKM',
      'TL' => 'TLS',
      'TO' => 'TON',
      'KN' => 'KNA',
      'KR' => 'KOR',
      'KW' => 'KWT',
      'LA' => 'LAO',
      'LB' => 'LBN',
      'LR' => 'LBR',
      'LY' => 'MNE',
      'LC' => 'LCA',
      'LI' => 'LIE',
      'LK' => 'LKA',
      'PT' => 'PRT',
      'PY' => 'PRY',
      'PS' => 'PSE',
      'PF' => 'PYF',
      'QA' => 'QAT',
      'RE' => 'REU',
      'RO' => 'ROU',
      'RU' => 'RUS',
      'RW' => 'RWA',
      'SA' => 'SAU',
      'TT' => 'TTO',
      'TN' => 'TUN',
      'TR' => 'TUR',
      'TV' => 'TUV',
      'TW' => 'TWN',
      'TZ' => 'TZA',
      'UG' => 'UGA',
      'UA' => 'UKR',
      'UM' => 'UMI',
      'UY' => 'URY',
      'LS' => 'LSO',
      'LT' => 'LTU',
      'LU' => 'LUX',
      'LV' => 'LVA',
      'MO' => 'MAC',
      'MF' => 'MAF',
      'MA' => 'MAR',
      'MC' => 'MCO',
      'MD' => 'MDA',
      'MG' => 'MDG',
      'SD' => 'SDN',
      'SN' => 'SEN',
      'SG' => 'SGP',
      'GS' => 'SGS',
      'SH' => 'SHN',
      'SJ' => 'SJM',
      'SB' => 'SLB',
      'SL' => 'SLE',
      'SV' => 'SLV',
      'SM' => 'SMR',
      'US' => 'USA',
      'UZ' => 'UZB',
      'VA' => 'VAT',
      'VC' => 'VCT',
      'VE' => 'VEN',
      'VG' => 'VGB',
      'VI' => 'VIR',
      'VN' => 'VNM',
      'VU' => 'VUT',
      'WF' => 'WLF',
      'MV' => 'MDV',
      'MX' => 'MEX',
      'MH' => 'MHL',
      'MK' => 'MKD',
      'ML' => 'MLI',
      'MT' => 'MLT',
      'MM' => 'MMR',
      'MN' => 'MNG',
      'MZ' => 'MOZ',
      'SO' => 'SOM',
      'PM' => 'SPM',
      'RS' => 'SRB',
      'ST' => 'STP',
      'SR' => 'SUR',
      'SK' => 'SVK',
      'SI' => 'SVN',
      'SE' => 'SWE',
      'SZ' => 'SWZ',
      'SC' => 'SYC',
      'WS' => 'WSM',
      'YE' => 'YEM',
      'ZA' => 'ZAF',
      'ZM' => 'ZMB',
      'ZW' => 'ZWE',
      'SX' => 'SXM',
      'CW' => 'CUW',
      'BQ' => 'BES'
    };
    return mapOfCountryVsIso2Code.get(country);
  }
}